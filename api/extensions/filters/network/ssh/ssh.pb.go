// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: github.com/pomerium/envoy-custom/api/extensions/filters/network/ssh/ssh.proto

package ssh

import (
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MirrorSessionTarget_Mode int32

const (
	MirrorSessionTarget_READ_ONLY  MirrorSessionTarget_Mode = 0
	MirrorSessionTarget_READ_WRITE MirrorSessionTarget_Mode = 1
)

// Enum value maps for MirrorSessionTarget_Mode.
var (
	MirrorSessionTarget_Mode_name = map[int32]string{
		0: "READ_ONLY",
		1: "READ_WRITE",
	}
	MirrorSessionTarget_Mode_value = map[string]int32{
		"READ_ONLY":  0,
		"READ_WRITE": 1,
	}
)

func (x MirrorSessionTarget_Mode) Enum() *MirrorSessionTarget_Mode {
	p := new(MirrorSessionTarget_Mode)
	*p = x
	return p
}

func (x MirrorSessionTarget_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MirrorSessionTarget_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_enumTypes[0].Descriptor()
}

func (MirrorSessionTarget_Mode) Type() protoreflect.EnumType {
	return &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_enumTypes[0]
}

func (x MirrorSessionTarget_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MirrorSessionTarget_Mode.Descriptor instead.
func (MirrorSessionTarget_Mode) EnumDescriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{19, 0}
}

type CodecConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of host keys for the SSH server. Filename or inline string/bytes are supported,
	// environment variables are not supported. If multiple keys are given, they must each have
	// unique algorithms.
	HostKeys []*v3.DataSource `protobuf:"bytes,1,rep,name=host_keys,json=hostKeys,proto3" json:"host_keys,omitempty"`
	// SSH key used to sign ephemeral certificate keys for upstream authentication. This key
	// should not itself be a certificate key.
	UserCaKey *v3.DataSource `protobuf:"bytes,2,opt,name=user_ca_key,json=userCaKey,proto3" json:"user_ca_key,omitempty"`
	// Maximum number of bytes encrypted or decrypted (per direction) before initiating a key
	// re-exchange. If unset, defaults to the recommended values for the encryption algorithms
	// currently in use.
	//
	// Note: the maximum value configurable here is the smallest safe value that can be used for any
	// algorithm, but the default values for some algorithms are larger.
	RekeyThreshold *wrapperspb.UInt64Value `protobuf:"bytes,3,opt,name=rekey_threshold,json=rekeyThreshold,proto3" json:"rekey_threshold,omitempty"`
	// Pomerium StreamManagement grpc service.
	GrpcService   *v3.GrpcService      `protobuf:"bytes,4,opt,name=grpc_service,json=grpcService,proto3" json:"grpc_service,omitempty"`
	StreamTracker *StreamTrackerConfig `protobuf:"bytes,5,opt,name=stream_tracker,json=streamTracker,proto3" json:"stream_tracker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodecConfig) Reset() {
	*x = CodecConfig{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodecConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodecConfig) ProtoMessage() {}

func (x *CodecConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodecConfig.ProtoReflect.Descriptor instead.
func (*CodecConfig) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{0}
}

func (x *CodecConfig) GetHostKeys() []*v3.DataSource {
	if x != nil {
		return x.HostKeys
	}
	return nil
}

func (x *CodecConfig) GetUserCaKey() *v3.DataSource {
	if x != nil {
		return x.UserCaKey
	}
	return nil
}

func (x *CodecConfig) GetRekeyThreshold() *wrapperspb.UInt64Value {
	if x != nil {
		return x.RekeyThreshold
	}
	return nil
}

func (x *CodecConfig) GetGrpcService() *v3.GrpcService {
	if x != nil {
		return x.GrpcService
	}
	return nil
}

func (x *CodecConfig) GetStreamTracker() *StreamTrackerConfig {
	if x != nil {
		return x.StreamTracker
	}
	return nil
}

type StreamTrackerConfig struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Filters       []*v3.TypedExtensionConfig `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamTrackerConfig) Reset() {
	*x = StreamTrackerConfig{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTrackerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTrackerConfig) ProtoMessage() {}

func (x *StreamTrackerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTrackerConfig.ProtoReflect.Descriptor instead.
func (*StreamTrackerConfig) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{1}
}

func (x *StreamTrackerConfig) GetFilters() []*v3.TypedExtensionConfig {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ReverseTunnelCluster struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	EdsConfig     *v3.ConfigSource       `protobuf:"bytes,2,opt,name=eds_config,json=edsConfig,proto3" json:"eds_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReverseTunnelCluster) Reset() {
	*x = ReverseTunnelCluster{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReverseTunnelCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseTunnelCluster) ProtoMessage() {}

func (x *ReverseTunnelCluster) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseTunnelCluster.ProtoReflect.Descriptor instead.
func (*ReverseTunnelCluster) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{2}
}

func (x *ReverseTunnelCluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReverseTunnelCluster) GetEdsConfig() *v3.ConfigSource {
	if x != nil {
		return x.EdsConfig
	}
	return nil
}

// ChannelMessages are sent in both directions during a stream established by ServeChannel.
// Each message contains either raw protocol-specific bytes sent/received on the channel, or
// a control message containing a meta-request for the peer to take some action.
type ChannelMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ChannelMessage_Metadata
	//	*ChannelMessage_RawBytes
	//	*ChannelMessage_ChannelControl
	Message       isChannelMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessage) Reset() {
	*x = ChannelMessage{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessage) ProtoMessage() {}

func (x *ChannelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessage.ProtoReflect.Descriptor instead.
func (*ChannelMessage) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{3}
}

func (x *ChannelMessage) GetMessage() isChannelMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ChannelMessage) GetMetadata() *v3.Metadata {
	if x != nil {
		if x, ok := x.Message.(*ChannelMessage_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *ChannelMessage) GetRawBytes() *wrapperspb.BytesValue {
	if x != nil {
		if x, ok := x.Message.(*ChannelMessage_RawBytes); ok {
			return x.RawBytes
		}
	}
	return nil
}

func (x *ChannelMessage) GetChannelControl() *ChannelControl {
	if x != nil {
		if x, ok := x.Message.(*ChannelMessage_ChannelControl); ok {
			return x.ChannelControl
		}
	}
	return nil
}

type isChannelMessage_Message interface {
	isChannelMessage_Message()
}

type ChannelMessage_Metadata struct {
	Metadata *v3.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type ChannelMessage_RawBytes struct {
	RawBytes *wrapperspb.BytesValue `protobuf:"bytes,2,opt,name=raw_bytes,json=rawBytes,proto3,oneof"`
}

type ChannelMessage_ChannelControl struct {
	ChannelControl *ChannelControl `protobuf:"bytes,3,opt,name=channel_control,json=channelControl,proto3,oneof"`
}

func (*ChannelMessage_Metadata) isChannelMessage_Message() {}

func (*ChannelMessage_RawBytes) isChannelMessage_Message() {}

func (*ChannelMessage_ChannelControl) isChannelMessage_Message() {}

// ChannelControl contains a protocol-specific message instructing the peer to take some action
// on the channel.
type ChannelControl struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Protocol      string                 `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	ControlAction *anypb.Any             `protobuf:"bytes,2,opt,name=control_action,json=controlAction,proto3" json:"control_action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelControl) Reset() {
	*x = ChannelControl{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelControl) ProtoMessage() {}

func (x *ChannelControl) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelControl.ProtoReflect.Descriptor instead.
func (*ChannelControl) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{4}
}

func (x *ChannelControl) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ChannelControl) GetControlAction() *anypb.Any {
	if x != nil {
		return x.ControlAction
	}
	return nil
}

// ClientMessages are sent by Envoy to Pomerium to inform it of stream events,
// to request authentication, or to pass through a downstream reply to a
// server request.
type ClientMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ClientMessage_Event
	//	*ClientMessage_AuthRequest
	//	*ClientMessage_InfoResponse
	Message       isClientMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{5}
}

func (x *ClientMessage) GetMessage() isClientMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ClientMessage) GetEvent() *StreamEvent {
	if x != nil {
		if x, ok := x.Message.(*ClientMessage_Event); ok {
			return x.Event
		}
	}
	return nil
}

func (x *ClientMessage) GetAuthRequest() *AuthenticationRequest {
	if x != nil {
		if x, ok := x.Message.(*ClientMessage_AuthRequest); ok {
			return x.AuthRequest
		}
	}
	return nil
}

func (x *ClientMessage) GetInfoResponse() *InfoResponse {
	if x != nil {
		if x, ok := x.Message.(*ClientMessage_InfoResponse); ok {
			return x.InfoResponse
		}
	}
	return nil
}

type isClientMessage_Message interface {
	isClientMessage_Message()
}

type ClientMessage_Event struct {
	Event *StreamEvent `protobuf:"bytes,1,opt,name=event,proto3,oneof"`
}

type ClientMessage_AuthRequest struct {
	AuthRequest *AuthenticationRequest `protobuf:"bytes,2,opt,name=auth_request,json=authRequest,proto3,oneof"`
}

type ClientMessage_InfoResponse struct {
	InfoResponse *InfoResponse `protobuf:"bytes,3,opt,name=info_response,json=infoResponse,proto3,oneof"`
}

func (*ClientMessage_Event) isClientMessage_Message() {}

func (*ClientMessage_AuthRequest) isClientMessage_Message() {}

func (*ClientMessage_InfoResponse) isClientMessage_Message() {}

// StreamEvent informs the server of notable events that occur on the stream.
// When the ManageStream RPC is started, a downstream_connected event will be
// the first message sent on the stream.
type StreamEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Event:
	//
	//	*StreamEvent_DownstreamConnected
	//	*StreamEvent_DownstreamDisconnected
	//	*StreamEvent_UpstreamConnected
	//	*StreamEvent_ChannelEvent
	//	*StreamEvent_GlobalRequest
	Event         isStreamEvent_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEvent) Reset() {
	*x = StreamEvent{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent) ProtoMessage() {}

func (x *StreamEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent.ProtoReflect.Descriptor instead.
func (*StreamEvent) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{6}
}

func (x *StreamEvent) GetEvent() isStreamEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *StreamEvent) GetDownstreamConnected() *DownstreamConnectEvent {
	if x != nil {
		if x, ok := x.Event.(*StreamEvent_DownstreamConnected); ok {
			return x.DownstreamConnected
		}
	}
	return nil
}

func (x *StreamEvent) GetDownstreamDisconnected() *DownstreamDisconnectedEvent {
	if x != nil {
		if x, ok := x.Event.(*StreamEvent_DownstreamDisconnected); ok {
			return x.DownstreamDisconnected
		}
	}
	return nil
}

func (x *StreamEvent) GetUpstreamConnected() *UpstreamConnectEvent {
	if x != nil {
		if x, ok := x.Event.(*StreamEvent_UpstreamConnected); ok {
			return x.UpstreamConnected
		}
	}
	return nil
}

func (x *StreamEvent) GetChannelEvent() *ChannelEvent {
	if x != nil {
		if x, ok := x.Event.(*StreamEvent_ChannelEvent); ok {
			return x.ChannelEvent
		}
	}
	return nil
}

func (x *StreamEvent) GetGlobalRequest() *GlobalRequest {
	if x != nil {
		if x, ok := x.Event.(*StreamEvent_GlobalRequest); ok {
			return x.GlobalRequest
		}
	}
	return nil
}

type isStreamEvent_Event interface {
	isStreamEvent_Event()
}

type StreamEvent_DownstreamConnected struct {
	DownstreamConnected *DownstreamConnectEvent `protobuf:"bytes,1,opt,name=downstream_connected,json=downstreamConnected,proto3,oneof"`
}

type StreamEvent_DownstreamDisconnected struct {
	DownstreamDisconnected *DownstreamDisconnectedEvent `protobuf:"bytes,2,opt,name=downstream_disconnected,json=downstreamDisconnected,proto3,oneof"`
}

type StreamEvent_UpstreamConnected struct {
	UpstreamConnected *UpstreamConnectEvent `protobuf:"bytes,3,opt,name=upstream_connected,json=upstreamConnected,proto3,oneof"`
}

type StreamEvent_ChannelEvent struct {
	ChannelEvent *ChannelEvent `protobuf:"bytes,4,opt,name=channel_event,json=channelEvent,proto3,oneof"`
}

type StreamEvent_GlobalRequest struct {
	GlobalRequest *GlobalRequest `protobuf:"bytes,5,opt,name=global_request,json=globalRequest,proto3,oneof"`
}

func (*StreamEvent_DownstreamConnected) isStreamEvent_Event() {}

func (*StreamEvent_DownstreamDisconnected) isStreamEvent_Event() {}

func (*StreamEvent_UpstreamConnected) isStreamEvent_Event() {}

func (*StreamEvent_ChannelEvent) isStreamEvent_Event() {}

func (*StreamEvent_GlobalRequest) isStreamEvent_Event() {}

type DownstreamConnectEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      uint64                 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	SourceAddress string                 `protobuf:"bytes,2,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"` // [other connection info as needed]
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownstreamConnectEvent) Reset() {
	*x = DownstreamConnectEvent{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamConnectEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamConnectEvent) ProtoMessage() {}

func (x *DownstreamConnectEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamConnectEvent.ProtoReflect.Descriptor instead.
func (*DownstreamConnectEvent) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{7}
}

func (x *DownstreamConnectEvent) GetStreamId() uint64 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *DownstreamConnectEvent) GetSourceAddress() string {
	if x != nil {
		return x.SourceAddress
	}
	return ""
}

type DownstreamDisconnectedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"` // example, could also be an enum
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownstreamDisconnectedEvent) Reset() {
	*x = DownstreamDisconnectedEvent{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamDisconnectedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamDisconnectedEvent) ProtoMessage() {}

func (x *DownstreamDisconnectedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamDisconnectedEvent.ProtoReflect.Descriptor instead.
func (*DownstreamDisconnectedEvent) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{8}
}

func (x *DownstreamDisconnectedEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type UpstreamConnectEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpstreamConnectEvent) Reset() {
	*x = UpstreamConnectEvent{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamConnectEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamConnectEvent) ProtoMessage() {}

func (x *UpstreamConnectEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamConnectEvent.ProtoReflect.Descriptor instead.
func (*UpstreamConnectEvent) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{9}
}

type ChannelEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Event:
	//
	//	*ChannelEvent_InternalChannelOpened
	//	*ChannelEvent_InternalChannelClosed
	Event         isChannelEvent_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelEvent) Reset() {
	*x = ChannelEvent{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelEvent) ProtoMessage() {}

func (x *ChannelEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelEvent.ProtoReflect.Descriptor instead.
func (*ChannelEvent) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{10}
}

func (x *ChannelEvent) GetEvent() isChannelEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *ChannelEvent) GetInternalChannelOpened() *ChannelEvent_InternalChannelOpenedEvent {
	if x != nil {
		if x, ok := x.Event.(*ChannelEvent_InternalChannelOpened); ok {
			return x.InternalChannelOpened
		}
	}
	return nil
}

func (x *ChannelEvent) GetInternalChannelClosed() *ChannelEvent_InternalChannelClosedEvent {
	if x != nil {
		if x, ok := x.Event.(*ChannelEvent_InternalChannelClosed); ok {
			return x.InternalChannelClosed
		}
	}
	return nil
}

type isChannelEvent_Event interface {
	isChannelEvent_Event()
}

type ChannelEvent_InternalChannelOpened struct {
	InternalChannelOpened *ChannelEvent_InternalChannelOpenedEvent `protobuf:"bytes,2,opt,name=internal_channel_opened,json=internalChannelOpened,proto3,oneof"`
}

type ChannelEvent_InternalChannelClosed struct {
	InternalChannelClosed *ChannelEvent_InternalChannelClosedEvent `protobuf:"bytes,3,opt,name=internal_channel_closed,json=internalChannelClosed,proto3,oneof"`
}

func (*ChannelEvent_InternalChannelOpened) isChannelEvent_Event() {}

func (*ChannelEvent_InternalChannelClosed) isChannelEvent_Event() {}

type GlobalRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*GlobalRequest_TcpipForwardRequest_
	Request       isGlobalRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalRequest) Reset() {
	*x = GlobalRequest{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalRequest) ProtoMessage() {}

func (x *GlobalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalRequest.ProtoReflect.Descriptor instead.
func (*GlobalRequest) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{11}
}

func (x *GlobalRequest) GetRequest() isGlobalRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *GlobalRequest) GetTcpipForwardRequest() *GlobalRequest_TcpipForwardRequest {
	if x != nil {
		if x, ok := x.Request.(*GlobalRequest_TcpipForwardRequest_); ok {
			return x.TcpipForwardRequest
		}
	}
	return nil
}

type isGlobalRequest_Request interface {
	isGlobalRequest_Request()
}

type GlobalRequest_TcpipForwardRequest_ struct {
	TcpipForwardRequest *GlobalRequest_TcpipForwardRequest `protobuf:"bytes,2,opt,name=tcpip_forward_request,json=tcpipForwardRequest,proto3,oneof"`
}

func (*GlobalRequest_TcpipForwardRequest_) isGlobalRequest_Request() {}

// AuthenticationRequest is sent by Envoy to Pomerium when the downstream
// client needs to be authenticated. The message always includes a username
// and hostname (of the requested upstream route), and contains a request
// message specific to the authentication method with additional credentials
// or other info required for that method.
type AuthenticationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Protocol      string                 `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Service       string                 `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Hostname      string                 `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	AuthMethod    string                 `protobuf:"bytes,5,opt,name=auth_method,json=authMethod,proto3" json:"auth_method,omitempty"`
	MethodRequest *anypb.Any             `protobuf:"bytes,6,opt,name=method_request,json=methodRequest,proto3" json:"method_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticationRequest) Reset() {
	*x = AuthenticationRequest{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationRequest) ProtoMessage() {}

func (x *AuthenticationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationRequest) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{12}
}

func (x *AuthenticationRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *AuthenticationRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *AuthenticationRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthenticationRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *AuthenticationRequest) GetAuthMethod() string {
	if x != nil {
		return x.AuthMethod
	}
	return ""
}

func (x *AuthenticationRequest) GetMethodRequest() *anypb.Any {
	if x != nil {
		return x.MethodRequest
	}
	return nil
}

// InfoResponse is a method-specific response to a corresponding InfoRequest.
type InfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Response      *anypb.Any             `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoResponse) Reset() {
	*x = InfoResponse{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponse) ProtoMessage() {}

func (x *InfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponse.ProtoReflect.Descriptor instead.
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{13}
}

func (x *InfoResponse) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *InfoResponse) GetResponse() *anypb.Any {
	if x != nil {
		return x.Response
	}
	return nil
}

// ServerMessages are sent by Pomerium to Envoy to respond to authentication
// requests, or to instruct Envoy to take some action on the stream.
type ServerMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ServerMessage_AuthResponse
	Message       isServerMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{14}
}

func (x *ServerMessage) GetMessage() isServerMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ServerMessage) GetAuthResponse() *AuthenticationResponse {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_AuthResponse); ok {
			return x.AuthResponse
		}
	}
	return nil
}

type isServerMessage_Message interface {
	isServerMessage_Message()
}

type ServerMessage_AuthResponse struct {
	AuthResponse *AuthenticationResponse `protobuf:"bytes,1,opt,name=auth_response,json=authResponse,proto3,oneof"`
}

func (*ServerMessage_AuthResponse) isServerMessage_Message() {}

// AuthenticationResponse is sent by Pomerium to Envoy in response to an
// AuthenticationRequest message. It indicates whether authentication is allowed
// or denied for the requested method (and only that method).
// Alternatively, the server may respond with an InfoRequest to ask the client
// to provide additional information, before allowing or denying the request.
// The client is expected to reply with a corresponding InfoResponse containing
// the requested credentials (method-specific). The server can then choose to
// allow or deny the request, or to send further informational requests.
// Eventually, the server must send an allow or deny response.
type AuthenticationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*AuthenticationResponse_Allow
	//	*AuthenticationResponse_Deny
	//	*AuthenticationResponse_InfoRequest
	Response      isAuthenticationResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticationResponse) Reset() {
	*x = AuthenticationResponse{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationResponse) ProtoMessage() {}

func (x *AuthenticationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationResponse) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{15}
}

func (x *AuthenticationResponse) GetResponse() isAuthenticationResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *AuthenticationResponse) GetAllow() *AllowResponse {
	if x != nil {
		if x, ok := x.Response.(*AuthenticationResponse_Allow); ok {
			return x.Allow
		}
	}
	return nil
}

func (x *AuthenticationResponse) GetDeny() *DenyResponse {
	if x != nil {
		if x, ok := x.Response.(*AuthenticationResponse_Deny); ok {
			return x.Deny
		}
	}
	return nil
}

func (x *AuthenticationResponse) GetInfoRequest() *InfoRequest {
	if x != nil {
		if x, ok := x.Response.(*AuthenticationResponse_InfoRequest); ok {
			return x.InfoRequest
		}
	}
	return nil
}

type isAuthenticationResponse_Response interface {
	isAuthenticationResponse_Response()
}

type AuthenticationResponse_Allow struct {
	Allow *AllowResponse `protobuf:"bytes,1,opt,name=allow,proto3,oneof"`
}

type AuthenticationResponse_Deny struct {
	Deny *DenyResponse `protobuf:"bytes,2,opt,name=deny,proto3,oneof"`
}

type AuthenticationResponse_InfoRequest struct {
	InfoRequest *InfoRequest `protobuf:"bytes,3,opt,name=info_request,json=infoRequest,proto3,oneof"`
}

func (*AuthenticationResponse_Allow) isAuthenticationResponse_Response() {}

func (*AuthenticationResponse_Deny) isAuthenticationResponse_Response() {}

func (*AuthenticationResponse_InfoRequest) isAuthenticationResponse_Response() {}

// AllowResponse contains the username, hostname, and a list of methods that
// successfully authenticated. Each method contains implementation-specific
// metadata that can be processed by Envoy.
type AllowResponse struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Username string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Types that are valid to be assigned to Target:
	//
	//	*AllowResponse_Upstream
	//	*AllowResponse_Internal
	//	*AllowResponse_MirrorSession
	Target        isAllowResponse_Target `protobuf_oneof:"target"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllowResponse) Reset() {
	*x = AllowResponse{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowResponse) ProtoMessage() {}

func (x *AllowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowResponse.ProtoReflect.Descriptor instead.
func (*AllowResponse) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{16}
}

func (x *AllowResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AllowResponse) GetTarget() isAllowResponse_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *AllowResponse) GetUpstream() *UpstreamTarget {
	if x != nil {
		if x, ok := x.Target.(*AllowResponse_Upstream); ok {
			return x.Upstream
		}
	}
	return nil
}

func (x *AllowResponse) GetInternal() *InternalTarget {
	if x != nil {
		if x, ok := x.Target.(*AllowResponse_Internal); ok {
			return x.Internal
		}
	}
	return nil
}

func (x *AllowResponse) GetMirrorSession() *MirrorSessionTarget {
	if x != nil {
		if x, ok := x.Target.(*AllowResponse_MirrorSession); ok {
			return x.MirrorSession
		}
	}
	return nil
}

type isAllowResponse_Target interface {
	isAllowResponse_Target()
}

type AllowResponse_Upstream struct {
	Upstream *UpstreamTarget `protobuf:"bytes,2,opt,name=upstream,proto3,oneof"`
}

type AllowResponse_Internal struct {
	Internal *InternalTarget `protobuf:"bytes,3,opt,name=internal,proto3,oneof"`
}

type AllowResponse_MirrorSession struct {
	MirrorSession *MirrorSessionTarget `protobuf:"bytes,4,opt,name=mirror_session,json=mirrorSession,proto3,oneof"`
}

func (*AllowResponse_Upstream) isAllowResponse_Target() {}

func (*AllowResponse_Internal) isAllowResponse_Target() {}

func (*AllowResponse_MirrorSession) isAllowResponse_Target() {}

type UpstreamTarget struct {
	state                  protoimpl.MessageState     `protogen:"open.v1"`
	Hostname               string                     `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	AllowMirrorConnections bool                       `protobuf:"varint,2,opt,name=allow_mirror_connections,json=allowMirrorConnections,proto3" json:"allow_mirror_connections,omitempty"`
	DirectTcpip            bool                       `protobuf:"varint,3,opt,name=direct_tcpip,json=directTcpip,proto3" json:"direct_tcpip,omitempty"`
	AllowedMethods         []*AllowedMethod           `protobuf:"bytes,4,rep,name=allowed_methods,json=allowedMethods,proto3" json:"allowed_methods,omitempty"`
	Extensions             []*v3.TypedExtensionConfig `protobuf:"bytes,5,rep,name=extensions,proto3" json:"extensions,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpstreamTarget) Reset() {
	*x = UpstreamTarget{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamTarget) ProtoMessage() {}

func (x *UpstreamTarget) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamTarget.ProtoReflect.Descriptor instead.
func (*UpstreamTarget) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{17}
}

func (x *UpstreamTarget) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *UpstreamTarget) GetAllowMirrorConnections() bool {
	if x != nil {
		return x.AllowMirrorConnections
	}
	return false
}

func (x *UpstreamTarget) GetDirectTcpip() bool {
	if x != nil {
		return x.DirectTcpip
	}
	return false
}

func (x *UpstreamTarget) GetAllowedMethods() []*AllowedMethod {
	if x != nil {
		return x.AllowedMethods
	}
	return nil
}

func (x *UpstreamTarget) GetExtensions() []*v3.TypedExtensionConfig {
	if x != nil {
		return x.Extensions
	}
	return nil
}

type InternalTarget struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SetMetadata   *v3.Metadata           `protobuf:"bytes,1,opt,name=set_metadata,json=setMetadata,proto3" json:"set_metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InternalTarget) Reset() {
	*x = InternalTarget{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalTarget) ProtoMessage() {}

func (x *InternalTarget) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalTarget.ProtoReflect.Descriptor instead.
func (*InternalTarget) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{18}
}

func (x *InternalTarget) GetSetMetadata() *v3.Metadata {
	if x != nil {
		return x.SetMetadata
	}
	return nil
}

type MirrorSessionTarget struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	SourceId      uint64                   `protobuf:"varint,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	Mode          MirrorSessionTarget_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=pomerium.extensions.ssh.MirrorSessionTarget_Mode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MirrorSessionTarget) Reset() {
	*x = MirrorSessionTarget{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MirrorSessionTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MirrorSessionTarget) ProtoMessage() {}

func (x *MirrorSessionTarget) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MirrorSessionTarget.ProtoReflect.Descriptor instead.
func (*MirrorSessionTarget) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{19}
}

func (x *MirrorSessionTarget) GetSourceId() uint64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *MirrorSessionTarget) GetMode() MirrorSessionTarget_Mode {
	if x != nil {
		return x.Mode
	}
	return MirrorSessionTarget_READ_ONLY
}

type AllowedMethod struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	MethodData    *anypb.Any             `protobuf:"bytes,2,opt,name=method_data,json=methodData,proto3" json:"method_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllowedMethod) Reset() {
	*x = AllowedMethod{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllowedMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowedMethod) ProtoMessage() {}

func (x *AllowedMethod) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowedMethod.ProtoReflect.Descriptor instead.
func (*AllowedMethod) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{20}
}

func (x *AllowedMethod) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *AllowedMethod) GetMethodData() *anypb.Any {
	if x != nil {
		return x.MethodData
	}
	return nil
}

// DenyResponse indicates the user was not successfully authenticated for
// the given method(s). If partial=true, the methods fields lists other
// supported authentication method names that the client can try instead.
type DenyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Partial       bool                   `protobuf:"varint,1,opt,name=partial,proto3" json:"partial,omitempty"`
	Methods       []string               `protobuf:"bytes,2,rep,name=methods,proto3" json:"methods,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DenyResponse) Reset() {
	*x = DenyResponse{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DenyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenyResponse) ProtoMessage() {}

func (x *DenyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenyResponse.ProtoReflect.Descriptor instead.
func (*DenyResponse) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{21}
}

func (x *DenyResponse) GetPartial() bool {
	if x != nil {
		return x.Partial
	}
	return false
}

func (x *DenyResponse) GetMethods() []string {
	if x != nil {
		return x.Methods
	}
	return nil
}

// InfoRequest is sent by Pomerium to Envoy during an authentication sequence,
// and is intended to be propagated in some way to the downstream client.
// The client must then respond with the requested information (e.g. password)
// which must be forwarded by Envoy to Pomerium in an InfoResponse message.
type InfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Request       *anypb.Any             `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoRequest) Reset() {
	*x = InfoRequest{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRequest) ProtoMessage() {}

func (x *InfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRequest.ProtoReflect.Descriptor instead.
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{22}
}

func (x *InfoRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *InfoRequest) GetRequest() *anypb.Any {
	if x != nil {
		return x.Request
	}
	return nil
}

type SSHDownstreamChannelInfo struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	ChannelType               string                 `protobuf:"bytes,1,opt,name=channel_type,json=channelType,proto3" json:"channel_type,omitempty"`
	DownstreamChannelId       uint32                 `protobuf:"varint,2,opt,name=downstream_channel_id,json=downstreamChannelId,proto3" json:"downstream_channel_id,omitempty"`
	InternalUpstreamChannelId uint32                 `protobuf:"varint,3,opt,name=internal_upstream_channel_id,json=internalUpstreamChannelId,proto3" json:"internal_upstream_channel_id,omitempty"`
	InitialWindowSize         uint32                 `protobuf:"varint,4,opt,name=initial_window_size,json=initialWindowSize,proto3" json:"initial_window_size,omitempty"`
	MaxPacketSize             uint32                 `protobuf:"varint,5,opt,name=max_packet_size,json=maxPacketSize,proto3" json:"max_packet_size,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *SSHDownstreamChannelInfo) Reset() {
	*x = SSHDownstreamChannelInfo{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SSHDownstreamChannelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHDownstreamChannelInfo) ProtoMessage() {}

func (x *SSHDownstreamChannelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHDownstreamChannelInfo.ProtoReflect.Descriptor instead.
func (*SSHDownstreamChannelInfo) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{23}
}

func (x *SSHDownstreamChannelInfo) GetChannelType() string {
	if x != nil {
		return x.ChannelType
	}
	return ""
}

func (x *SSHDownstreamChannelInfo) GetDownstreamChannelId() uint32 {
	if x != nil {
		return x.DownstreamChannelId
	}
	return 0
}

func (x *SSHDownstreamChannelInfo) GetInternalUpstreamChannelId() uint32 {
	if x != nil {
		return x.InternalUpstreamChannelId
	}
	return 0
}

func (x *SSHDownstreamChannelInfo) GetInitialWindowSize() uint32 {
	if x != nil {
		return x.InitialWindowSize
	}
	return 0
}

func (x *SSHDownstreamChannelInfo) GetMaxPacketSize() uint32 {
	if x != nil {
		return x.MaxPacketSize
	}
	return 0
}

type SSHDownstreamPTYInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TermEnv       string                 `protobuf:"bytes,1,opt,name=term_env,json=termEnv,proto3" json:"term_env,omitempty"`
	WidthColumns  uint32                 `protobuf:"varint,2,opt,name=width_columns,json=widthColumns,proto3" json:"width_columns,omitempty"`
	HeightRows    uint32                 `protobuf:"varint,3,opt,name=height_rows,json=heightRows,proto3" json:"height_rows,omitempty"`
	WidthPx       uint32                 `protobuf:"varint,4,opt,name=width_px,json=widthPx,proto3" json:"width_px,omitempty"`
	HeightPx      uint32                 `protobuf:"varint,5,opt,name=height_px,json=heightPx,proto3" json:"height_px,omitempty"`
	Modes         []byte                 `protobuf:"bytes,6,opt,name=modes,proto3" json:"modes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SSHDownstreamPTYInfo) Reset() {
	*x = SSHDownstreamPTYInfo{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SSHDownstreamPTYInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHDownstreamPTYInfo) ProtoMessage() {}

func (x *SSHDownstreamPTYInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHDownstreamPTYInfo.ProtoReflect.Descriptor instead.
func (*SSHDownstreamPTYInfo) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{24}
}

func (x *SSHDownstreamPTYInfo) GetTermEnv() string {
	if x != nil {
		return x.TermEnv
	}
	return ""
}

func (x *SSHDownstreamPTYInfo) GetWidthColumns() uint32 {
	if x != nil {
		return x.WidthColumns
	}
	return 0
}

func (x *SSHDownstreamPTYInfo) GetHeightRows() uint32 {
	if x != nil {
		return x.HeightRows
	}
	return 0
}

func (x *SSHDownstreamPTYInfo) GetWidthPx() uint32 {
	if x != nil {
		return x.WidthPx
	}
	return 0
}

func (x *SSHDownstreamPTYInfo) GetHeightPx() uint32 {
	if x != nil {
		return x.HeightPx
	}
	return 0
}

func (x *SSHDownstreamPTYInfo) GetModes() []byte {
	if x != nil {
		return x.Modes
	}
	return nil
}

type SSHChannelControlAction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Action:
	//
	//	*SSHChannelControlAction_HandOff
	Action        isSSHChannelControlAction_Action `protobuf_oneof:"action"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SSHChannelControlAction) Reset() {
	*x = SSHChannelControlAction{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SSHChannelControlAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHChannelControlAction) ProtoMessage() {}

func (x *SSHChannelControlAction) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHChannelControlAction.ProtoReflect.Descriptor instead.
func (*SSHChannelControlAction) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{25}
}

func (x *SSHChannelControlAction) GetAction() isSSHChannelControlAction_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *SSHChannelControlAction) GetHandOff() *SSHChannelControlAction_HandOffUpstream {
	if x != nil {
		if x, ok := x.Action.(*SSHChannelControlAction_HandOff); ok {
			return x.HandOff
		}
	}
	return nil
}

type isSSHChannelControlAction_Action interface {
	isSSHChannelControlAction_Action()
}

type SSHChannelControlAction_HandOff struct {
	// HandOffUpstream instructs Envoy to end the "hijacked" internal stream, and connect the
	// downstream client to the real upstream server.
	HandOff *SSHChannelControlAction_HandOffUpstream `protobuf:"bytes,2,opt,name=hand_off,json=handOff,proto3,oneof"`
}

func (*SSHChannelControlAction_HandOff) isSSHChannelControlAction_Action() {}

type PublicKeyMethodRequest struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	PublicKey                  []byte                 `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PublicKeyAlg               string                 `protobuf:"bytes,2,opt,name=public_key_alg,json=publicKeyAlg,proto3" json:"public_key_alg,omitempty"`
	PublicKeyFingerprintSha256 []byte                 `protobuf:"bytes,3,opt,name=public_key_fingerprint_sha256,json=publicKeyFingerprintSha256,proto3" json:"public_key_fingerprint_sha256,omitempty"` // raw fingerprint, no formatting
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PublicKeyMethodRequest) Reset() {
	*x = PublicKeyMethodRequest{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicKeyMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKeyMethodRequest) ProtoMessage() {}

func (x *PublicKeyMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKeyMethodRequest.ProtoReflect.Descriptor instead.
func (*PublicKeyMethodRequest) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{26}
}

func (x *PublicKeyMethodRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *PublicKeyMethodRequest) GetPublicKeyAlg() string {
	if x != nil {
		return x.PublicKeyAlg
	}
	return ""
}

func (x *PublicKeyMethodRequest) GetPublicKeyFingerprintSha256() []byte {
	if x != nil {
		return x.PublicKeyFingerprintSha256
	}
	return nil
}

type PublicKeyAllowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicKey     []byte                 `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Permissions   *Permissions           `protobuf:"bytes,2,opt,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicKeyAllowResponse) Reset() {
	*x = PublicKeyAllowResponse{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicKeyAllowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKeyAllowResponse) ProtoMessage() {}

func (x *PublicKeyAllowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKeyAllowResponse.ProtoReflect.Descriptor instead.
func (*PublicKeyAllowResponse) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{27}
}

func (x *PublicKeyAllowResponse) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *PublicKeyAllowResponse) GetPermissions() *Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type KeyboardInteractiveMethodRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submethods    []string               `protobuf:"bytes,1,rep,name=submethods,proto3" json:"submethods,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyboardInteractiveMethodRequest) Reset() {
	*x = KeyboardInteractiveMethodRequest{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyboardInteractiveMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyboardInteractiveMethodRequest) ProtoMessage() {}

func (x *KeyboardInteractiveMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyboardInteractiveMethodRequest.ProtoReflect.Descriptor instead.
func (*KeyboardInteractiveMethodRequest) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{28}
}

func (x *KeyboardInteractiveMethodRequest) GetSubmethods() []string {
	if x != nil {
		return x.Submethods
	}
	return nil
}

type KeyboardInteractiveAllowResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	SessionId     string                         `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserId        string                         `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Claims        map[string]*structpb.ListValue `protobuf:"bytes,3,rep,name=claims,proto3" json:"claims,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Audience      []string                       `protobuf:"bytes,4,rep,name=audience,proto3" json:"audience,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyboardInteractiveAllowResponse) Reset() {
	*x = KeyboardInteractiveAllowResponse{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyboardInteractiveAllowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyboardInteractiveAllowResponse) ProtoMessage() {}

func (x *KeyboardInteractiveAllowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyboardInteractiveAllowResponse.ProtoReflect.Descriptor instead.
func (*KeyboardInteractiveAllowResponse) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{29}
}

func (x *KeyboardInteractiveAllowResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *KeyboardInteractiveAllowResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *KeyboardInteractiveAllowResponse) GetClaims() map[string]*structpb.ListValue {
	if x != nil {
		return x.Claims
	}
	return nil
}

func (x *KeyboardInteractiveAllowResponse) GetAudience() []string {
	if x != nil {
		return x.Audience
	}
	return nil
}

type KeyboardInteractiveInfoPrompts struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Name          string                                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Instruction   string                                   `protobuf:"bytes,2,opt,name=instruction,proto3" json:"instruction,omitempty"`
	LanguageTag   string                                   `protobuf:"bytes,3,opt,name=language_tag,json=languageTag,proto3" json:"language_tag,omitempty"`
	Prompts       []*KeyboardInteractiveInfoPrompts_Prompt `protobuf:"bytes,4,rep,name=prompts,proto3" json:"prompts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyboardInteractiveInfoPrompts) Reset() {
	*x = KeyboardInteractiveInfoPrompts{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyboardInteractiveInfoPrompts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyboardInteractiveInfoPrompts) ProtoMessage() {}

func (x *KeyboardInteractiveInfoPrompts) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyboardInteractiveInfoPrompts.ProtoReflect.Descriptor instead.
func (*KeyboardInteractiveInfoPrompts) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{30}
}

func (x *KeyboardInteractiveInfoPrompts) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KeyboardInteractiveInfoPrompts) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *KeyboardInteractiveInfoPrompts) GetLanguageTag() string {
	if x != nil {
		return x.LanguageTag
	}
	return ""
}

func (x *KeyboardInteractiveInfoPrompts) GetPrompts() []*KeyboardInteractiveInfoPrompts_Prompt {
	if x != nil {
		return x.Prompts
	}
	return nil
}

type KeyboardInteractiveInfoPromptResponses struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Responses     []string               `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyboardInteractiveInfoPromptResponses) Reset() {
	*x = KeyboardInteractiveInfoPromptResponses{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyboardInteractiveInfoPromptResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyboardInteractiveInfoPromptResponses) ProtoMessage() {}

func (x *KeyboardInteractiveInfoPromptResponses) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyboardInteractiveInfoPromptResponses.ProtoReflect.Descriptor instead.
func (*KeyboardInteractiveInfoPromptResponses) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{31}
}

func (x *KeyboardInteractiveInfoPromptResponses) GetResponses() []string {
	if x != nil {
		return x.Responses
	}
	return nil
}

type Permissions struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	PermitPortForwarding  bool                   `protobuf:"varint,1,opt,name=permit_port_forwarding,json=permitPortForwarding,proto3" json:"permit_port_forwarding,omitempty"`
	PermitAgentForwarding bool                   `protobuf:"varint,2,opt,name=permit_agent_forwarding,json=permitAgentForwarding,proto3" json:"permit_agent_forwarding,omitempty"`
	PermitX11Forwarding   bool                   `protobuf:"varint,3,opt,name=permit_x11_forwarding,json=permitX11Forwarding,proto3" json:"permit_x11_forwarding,omitempty"`
	PermitPty             bool                   `protobuf:"varint,4,opt,name=permit_pty,json=permitPty,proto3" json:"permit_pty,omitempty"`
	PermitUserRc          bool                   `protobuf:"varint,5,opt,name=permit_user_rc,json=permitUserRc,proto3" json:"permit_user_rc,omitempty"`
	ValidStartTime        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=valid_start_time,json=validStartTime,proto3" json:"valid_start_time,omitempty"`
	ValidEndTime          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=valid_end_time,json=validEndTime,proto3" json:"valid_end_time,omitempty"`
	PermitOpen            []string               `protobuf:"bytes,8,rep,name=permit_open,json=permitOpen,proto3" json:"permit_open,omitempty"`
	PermitListen          []string               `protobuf:"bytes,9,rep,name=permit_listen,json=permitListen,proto3" json:"permit_listen,omitempty"`
	ForceCommand          string                 `protobuf:"bytes,10,opt,name=force_command,json=forceCommand,proto3" json:"force_command,omitempty"`
	ForceEnv              map[string]string      `protobuf:"bytes,11,rep,name=force_env,json=forceEnv,proto3" json:"force_env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RequireUserPresence   bool                   `protobuf:"varint,12,opt,name=require_user_presence,json=requireUserPresence,proto3" json:"require_user_presence,omitempty"`
	RequireVerify         bool                   `protobuf:"varint,13,opt,name=require_verify,json=requireVerify,proto3" json:"require_verify,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Permissions) Reset() {
	*x = Permissions{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permissions) ProtoMessage() {}

func (x *Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permissions.ProtoReflect.Descriptor instead.
func (*Permissions) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{32}
}

func (x *Permissions) GetPermitPortForwarding() bool {
	if x != nil {
		return x.PermitPortForwarding
	}
	return false
}

func (x *Permissions) GetPermitAgentForwarding() bool {
	if x != nil {
		return x.PermitAgentForwarding
	}
	return false
}

func (x *Permissions) GetPermitX11Forwarding() bool {
	if x != nil {
		return x.PermitX11Forwarding
	}
	return false
}

func (x *Permissions) GetPermitPty() bool {
	if x != nil {
		return x.PermitPty
	}
	return false
}

func (x *Permissions) GetPermitUserRc() bool {
	if x != nil {
		return x.PermitUserRc
	}
	return false
}

func (x *Permissions) GetValidStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidStartTime
	}
	return nil
}

func (x *Permissions) GetValidEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidEndTime
	}
	return nil
}

func (x *Permissions) GetPermitOpen() []string {
	if x != nil {
		return x.PermitOpen
	}
	return nil
}

func (x *Permissions) GetPermitListen() []string {
	if x != nil {
		return x.PermitListen
	}
	return nil
}

func (x *Permissions) GetForceCommand() string {
	if x != nil {
		return x.ForceCommand
	}
	return ""
}

func (x *Permissions) GetForceEnv() map[string]string {
	if x != nil {
		return x.ForceEnv
	}
	return nil
}

func (x *Permissions) GetRequireUserPresence() bool {
	if x != nil {
		return x.RequireUserPresence
	}
	return false
}

func (x *Permissions) GetRequireVerify() bool {
	if x != nil {
		return x.RequireVerify
	}
	return false
}

type FilterMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      uint64                 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	ChannelId     uint32                 `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterMetadata) Reset() {
	*x = FilterMetadata{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterMetadata) ProtoMessage() {}

func (x *FilterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterMetadata.ProtoReflect.Descriptor instead.
func (*FilterMetadata) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{33}
}

func (x *FilterMetadata) GetStreamId() uint64 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *FilterMetadata) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

type ChannelEvent_InternalChannelOpenedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     uint32                 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	PeerAddress   string                 `protobuf:"bytes,2,opt,name=peer_address,json=peerAddress,proto3" json:"peer_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelEvent_InternalChannelOpenedEvent) Reset() {
	*x = ChannelEvent_InternalChannelOpenedEvent{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelEvent_InternalChannelOpenedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelEvent_InternalChannelOpenedEvent) ProtoMessage() {}

func (x *ChannelEvent_InternalChannelOpenedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelEvent_InternalChannelOpenedEvent.ProtoReflect.Descriptor instead.
func (*ChannelEvent_InternalChannelOpenedEvent) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ChannelEvent_InternalChannelOpenedEvent) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *ChannelEvent_InternalChannelOpenedEvent) GetPeerAddress() string {
	if x != nil {
		return x.PeerAddress
	}
	return ""
}

type ChannelEvent_InternalChannelClosedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     uint32                 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelEvent_InternalChannelClosedEvent) Reset() {
	*x = ChannelEvent_InternalChannelClosedEvent{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelEvent_InternalChannelClosedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelEvent_InternalChannelClosedEvent) ProtoMessage() {}

func (x *ChannelEvent_InternalChannelClosedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelEvent_InternalChannelClosedEvent.ProtoReflect.Descriptor instead.
func (*ChannelEvent_InternalChannelClosedEvent) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{10, 1}
}

func (x *ChannelEvent_InternalChannelClosedEvent) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *ChannelEvent_InternalChannelClosedEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type GlobalRequest_TcpipForwardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RemoteAddress string                 `protobuf:"bytes,1,opt,name=remote_address,json=remoteAddress,proto3" json:"remote_address,omitempty"`
	RemotePort    uint32                 `protobuf:"varint,2,opt,name=remote_port,json=remotePort,proto3" json:"remote_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalRequest_TcpipForwardRequest) Reset() {
	*x = GlobalRequest_TcpipForwardRequest{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalRequest_TcpipForwardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalRequest_TcpipForwardRequest) ProtoMessage() {}

func (x *GlobalRequest_TcpipForwardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalRequest_TcpipForwardRequest.ProtoReflect.Descriptor instead.
func (*GlobalRequest_TcpipForwardRequest) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GlobalRequest_TcpipForwardRequest) GetRemoteAddress() string {
	if x != nil {
		return x.RemoteAddress
	}
	return ""
}

func (x *GlobalRequest_TcpipForwardRequest) GetRemotePort() uint32 {
	if x != nil {
		return x.RemotePort
	}
	return 0
}

type SSHChannelControlAction_HandOffUpstream struct {
	state                 protoimpl.MessageState    `protogen:"open.v1"`
	DownstreamChannelInfo *SSHDownstreamChannelInfo `protobuf:"bytes,2,opt,name=downstream_channel_info,json=downstreamChannelInfo,proto3" json:"downstream_channel_info,omitempty"`
	DownstreamPtyInfo     *SSHDownstreamPTYInfo     `protobuf:"bytes,3,opt,name=downstream_pty_info,json=downstreamPtyInfo,proto3" json:"downstream_pty_info,omitempty"`
	UpstreamAuth          *AllowResponse            `protobuf:"bytes,4,opt,name=upstream_auth,json=upstreamAuth,proto3" json:"upstream_auth,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SSHChannelControlAction_HandOffUpstream) Reset() {
	*x = SSHChannelControlAction_HandOffUpstream{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SSHChannelControlAction_HandOffUpstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHChannelControlAction_HandOffUpstream) ProtoMessage() {}

func (x *SSHChannelControlAction_HandOffUpstream) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHChannelControlAction_HandOffUpstream.ProtoReflect.Descriptor instead.
func (*SSHChannelControlAction_HandOffUpstream) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{25, 0}
}

func (x *SSHChannelControlAction_HandOffUpstream) GetDownstreamChannelInfo() *SSHDownstreamChannelInfo {
	if x != nil {
		return x.DownstreamChannelInfo
	}
	return nil
}

func (x *SSHChannelControlAction_HandOffUpstream) GetDownstreamPtyInfo() *SSHDownstreamPTYInfo {
	if x != nil {
		return x.DownstreamPtyInfo
	}
	return nil
}

func (x *SSHChannelControlAction_HandOffUpstream) GetUpstreamAuth() *AllowResponse {
	if x != nil {
		return x.UpstreamAuth
	}
	return nil
}

type KeyboardInteractiveInfoPrompts_Prompt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prompt        string                 `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Echo          bool                   `protobuf:"varint,2,opt,name=echo,proto3" json:"echo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyboardInteractiveInfoPrompts_Prompt) Reset() {
	*x = KeyboardInteractiveInfoPrompts_Prompt{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyboardInteractiveInfoPrompts_Prompt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyboardInteractiveInfoPrompts_Prompt) ProtoMessage() {}

func (x *KeyboardInteractiveInfoPrompts_Prompt) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyboardInteractiveInfoPrompts_Prompt.ProtoReflect.Descriptor instead.
func (*KeyboardInteractiveInfoPrompts_Prompt) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP(), []int{30, 0}
}

func (x *KeyboardInteractiveInfoPrompts_Prompt) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *KeyboardInteractiveInfoPrompts_Prompt) GetEcho() bool {
	if x != nil {
		return x.Echo
	}
	return false
}

var File_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto protoreflect.FileDescriptor

const file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDesc = "" +
	"\n" +
	"Mgithub.com/pomerium/envoy-custom/api/extensions/filters/network/ssh/ssh.proto\x12\x17pomerium.extensions.ssh\x1a\x1fenvoy/config/core/v3/base.proto\x1a(envoy/config/core/v3/config_source.proto\x1a$envoy/config/core/v3/extension.proto\x1a'envoy/config/core/v3/grpc_service.proto\x1a\x19google/protobuf/any.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1aAgithub.com/envoyproxy/protoc-gen-validate/validate/validate.proto\"\xa5\x03\n" +
	"\vCodecConfig\x12N\n" +
	"\thost_keys\x18\x01 \x03(\v2 .envoy.config.core.v3.DataSourceB\x0f\xfaB\f\x92\x01\t\b\x01\"\x05\x8a\x01\x02\x10\x01R\bhostKeys\x12J\n" +
	"\vuser_ca_key\x18\x02 \x01(\v2 .envoy.config.core.v3.DataSourceB\b\xfaB\x05\x8a\x01\x02\x10\x01R\tuserCaKey\x12U\n" +
	"\x0frekey_threshold\x18\x03 \x01(\v2\x1c.google.protobuf.UInt64ValueB\x0e\xfaB\v2\t\x18\x80\x80\x80\x80\x04(\x80\x02R\x0erekeyThreshold\x12N\n" +
	"\fgrpc_service\x18\x04 \x01(\v2!.envoy.config.core.v3.GrpcServiceB\b\xfaB\x05\x8a\x01\x02\x10\x01R\vgrpcService\x12S\n" +
	"\x0estream_tracker\x18\x05 \x01(\v2,.pomerium.extensions.ssh.StreamTrackerConfigR\rstreamTracker\"[\n" +
	"\x13StreamTrackerConfig\x12D\n" +
	"\afilters\x18\x01 \x03(\v2*.envoy.config.core.v3.TypedExtensionConfigR\afilters\"m\n" +
	"\x14ReverseTunnelCluster\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12A\n" +
	"\n" +
	"eds_config\x18\x02 \x01(\v2\".envoy.config.core.v3.ConfigSourceR\tedsConfig\"\xe9\x01\n" +
	"\x0eChannelMessage\x12<\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1e.envoy.config.core.v3.MetadataH\x00R\bmetadata\x12:\n" +
	"\traw_bytes\x18\x02 \x01(\v2\x1b.google.protobuf.BytesValueH\x00R\brawBytes\x12R\n" +
	"\x0fchannel_control\x18\x03 \x01(\v2'.pomerium.extensions.ssh.ChannelControlH\x00R\x0echannelControlB\t\n" +
	"\amessage\"i\n" +
	"\x0eChannelControl\x12\x1a\n" +
	"\bprotocol\x18\x01 \x01(\tR\bprotocol\x12;\n" +
	"\x0econtrol_action\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\rcontrolAction\"\xfb\x01\n" +
	"\rClientMessage\x12<\n" +
	"\x05event\x18\x01 \x01(\v2$.pomerium.extensions.ssh.StreamEventH\x00R\x05event\x12S\n" +
	"\fauth_request\x18\x02 \x01(\v2..pomerium.extensions.ssh.AuthenticationRequestH\x00R\vauthRequest\x12L\n" +
	"\rinfo_response\x18\x03 \x01(\v2%.pomerium.extensions.ssh.InfoResponseH\x00R\finfoResponseB\t\n" +
	"\amessage\"\xec\x03\n" +
	"\vStreamEvent\x12d\n" +
	"\x14downstream_connected\x18\x01 \x01(\v2/.pomerium.extensions.ssh.DownstreamConnectEventH\x00R\x13downstreamConnected\x12o\n" +
	"\x17downstream_disconnected\x18\x02 \x01(\v24.pomerium.extensions.ssh.DownstreamDisconnectedEventH\x00R\x16downstreamDisconnected\x12^\n" +
	"\x12upstream_connected\x18\x03 \x01(\v2-.pomerium.extensions.ssh.UpstreamConnectEventH\x00R\x11upstreamConnected\x12L\n" +
	"\rchannel_event\x18\x04 \x01(\v2%.pomerium.extensions.ssh.ChannelEventH\x00R\fchannelEvent\x12O\n" +
	"\x0eglobal_request\x18\x05 \x01(\v2&.pomerium.extensions.ssh.GlobalRequestH\x00R\rglobalRequestB\a\n" +
	"\x05event\"\\\n" +
	"\x16DownstreamConnectEvent\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\x04R\bstreamId\x12%\n" +
	"\x0esource_address\x18\x02 \x01(\tR\rsourceAddress\"5\n" +
	"\x1bDownstreamDisconnectedEvent\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\"\x16\n" +
	"\x14UpstreamConnectEvent\"\xc4\x03\n" +
	"\fChannelEvent\x12z\n" +
	"\x17internal_channel_opened\x18\x02 \x01(\v2@.pomerium.extensions.ssh.ChannelEvent.InternalChannelOpenedEventH\x00R\x15internalChannelOpened\x12z\n" +
	"\x17internal_channel_closed\x18\x03 \x01(\v2@.pomerium.extensions.ssh.ChannelEvent.InternalChannelClosedEventH\x00R\x15internalChannelClosed\x1a^\n" +
	"\x1aInternalChannelOpenedEvent\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\rR\tchannelId\x12!\n" +
	"\fpeer_address\x18\x02 \x01(\tR\vpeerAddress\x1aS\n" +
	"\x1aInternalChannelClosedEvent\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\rR\tchannelId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reasonB\a\n" +
	"\x05event\"\xeb\x01\n" +
	"\rGlobalRequest\x12p\n" +
	"\x15tcpip_forward_request\x18\x02 \x01(\v2:.pomerium.extensions.ssh.GlobalRequest.TcpipForwardRequestH\x00R\x13tcpipForwardRequest\x1a]\n" +
	"\x13TcpipForwardRequest\x12%\n" +
	"\x0eremote_address\x18\x01 \x01(\tR\rremoteAddress\x12\x1f\n" +
	"\vremote_port\x18\x02 \x01(\rR\n" +
	"remotePortB\t\n" +
	"\arequest\"\xe3\x01\n" +
	"\x15AuthenticationRequest\x12\x1a\n" +
	"\bprotocol\x18\x01 \x01(\tR\bprotocol\x12\x18\n" +
	"\aservice\x18\x02 \x01(\tR\aservice\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bhostname\x18\x04 \x01(\tR\bhostname\x12\x1f\n" +
	"\vauth_method\x18\x05 \x01(\tR\n" +
	"authMethod\x12;\n" +
	"\x0emethod_request\x18\x06 \x01(\v2\x14.google.protobuf.AnyR\rmethodRequest\"X\n" +
	"\fInfoResponse\x12\x16\n" +
	"\x06method\x18\x01 \x01(\tR\x06method\x120\n" +
	"\bresponse\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\bresponse\"r\n" +
	"\rServerMessage\x12V\n" +
	"\rauth_response\x18\x01 \x01(\v2/.pomerium.extensions.ssh.AuthenticationResponseH\x00R\fauthResponseB\t\n" +
	"\amessage\"\xec\x01\n" +
	"\x16AuthenticationResponse\x12>\n" +
	"\x05allow\x18\x01 \x01(\v2&.pomerium.extensions.ssh.AllowResponseH\x00R\x05allow\x12;\n" +
	"\x04deny\x18\x02 \x01(\v2%.pomerium.extensions.ssh.DenyResponseH\x00R\x04deny\x12I\n" +
	"\finfo_request\x18\x03 \x01(\v2$.pomerium.extensions.ssh.InfoRequestH\x00R\vinfoRequestB\n" +
	"\n" +
	"\bresponse\"\x9a\x02\n" +
	"\rAllowResponse\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12E\n" +
	"\bupstream\x18\x02 \x01(\v2'.pomerium.extensions.ssh.UpstreamTargetH\x00R\bupstream\x12E\n" +
	"\binternal\x18\x03 \x01(\v2'.pomerium.extensions.ssh.InternalTargetH\x00R\binternal\x12U\n" +
	"\x0emirror_session\x18\x04 \x01(\v2,.pomerium.extensions.ssh.MirrorSessionTargetH\x00R\rmirrorSessionB\b\n" +
	"\x06target\"\xa6\x02\n" +
	"\x0eUpstreamTarget\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x128\n" +
	"\x18allow_mirror_connections\x18\x02 \x01(\bR\x16allowMirrorConnections\x12!\n" +
	"\fdirect_tcpip\x18\x03 \x01(\bR\vdirectTcpip\x12O\n" +
	"\x0fallowed_methods\x18\x04 \x03(\v2&.pomerium.extensions.ssh.AllowedMethodR\x0eallowedMethods\x12J\n" +
	"\n" +
	"extensions\x18\x05 \x03(\v2*.envoy.config.core.v3.TypedExtensionConfigR\n" +
	"extensions\"S\n" +
	"\x0eInternalTarget\x12A\n" +
	"\fset_metadata\x18\x01 \x01(\v2\x1e.envoy.config.core.v3.MetadataR\vsetMetadata\"\xa0\x01\n" +
	"\x13MirrorSessionTarget\x12\x1b\n" +
	"\tsource_id\x18\x01 \x01(\x04R\bsourceId\x12E\n" +
	"\x04mode\x18\x02 \x01(\x0e21.pomerium.extensions.ssh.MirrorSessionTarget.ModeR\x04mode\"%\n" +
	"\x04Mode\x12\r\n" +
	"\tREAD_ONLY\x10\x00\x12\x0e\n" +
	"\n" +
	"READ_WRITE\x10\x01\"^\n" +
	"\rAllowedMethod\x12\x16\n" +
	"\x06method\x18\x01 \x01(\tR\x06method\x125\n" +
	"\vmethod_data\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\n" +
	"methodData\"B\n" +
	"\fDenyResponse\x12\x18\n" +
	"\apartial\x18\x01 \x01(\bR\apartial\x12\x18\n" +
	"\amethods\x18\x02 \x03(\tR\amethods\"U\n" +
	"\vInfoRequest\x12\x16\n" +
	"\x06method\x18\x01 \x01(\tR\x06method\x12.\n" +
	"\arequest\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\arequest\"\x8a\x02\n" +
	"\x18SSHDownstreamChannelInfo\x12!\n" +
	"\fchannel_type\x18\x01 \x01(\tR\vchannelType\x122\n" +
	"\x15downstream_channel_id\x18\x02 \x01(\rR\x13downstreamChannelId\x12?\n" +
	"\x1cinternal_upstream_channel_id\x18\x03 \x01(\rR\x19internalUpstreamChannelId\x12.\n" +
	"\x13initial_window_size\x18\x04 \x01(\rR\x11initialWindowSize\x12&\n" +
	"\x0fmax_packet_size\x18\x05 \x01(\rR\rmaxPacketSize\"\xc5\x01\n" +
	"\x14SSHDownstreamPTYInfo\x12\x19\n" +
	"\bterm_env\x18\x01 \x01(\tR\atermEnv\x12#\n" +
	"\rwidth_columns\x18\x02 \x01(\rR\fwidthColumns\x12\x1f\n" +
	"\vheight_rows\x18\x03 \x01(\rR\n" +
	"heightRows\x12\x19\n" +
	"\bwidth_px\x18\x04 \x01(\rR\awidthPx\x12\x1b\n" +
	"\theight_px\x18\x05 \x01(\rR\bheightPx\x12\x14\n" +
	"\x05modes\x18\x06 \x01(\fR\x05modes\"\xad\x03\n" +
	"\x17SSHChannelControlAction\x12]\n" +
	"\bhand_off\x18\x02 \x01(\v2@.pomerium.extensions.ssh.SSHChannelControlAction.HandOffUpstreamH\x00R\ahandOff\x1a\xa8\x02\n" +
	"\x0fHandOffUpstream\x12i\n" +
	"\x17downstream_channel_info\x18\x02 \x01(\v21.pomerium.extensions.ssh.SSHDownstreamChannelInfoR\x15downstreamChannelInfo\x12]\n" +
	"\x13downstream_pty_info\x18\x03 \x01(\v2-.pomerium.extensions.ssh.SSHDownstreamPTYInfoR\x11downstreamPtyInfo\x12K\n" +
	"\rupstream_auth\x18\x04 \x01(\v2&.pomerium.extensions.ssh.AllowResponseR\fupstreamAuthB\b\n" +
	"\x06action\"\xa0\x01\n" +
	"\x16PublicKeyMethodRequest\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\fR\tpublicKey\x12$\n" +
	"\x0epublic_key_alg\x18\x02 \x01(\tR\fpublicKeyAlg\x12A\n" +
	"\x1dpublic_key_fingerprint_sha256\x18\x03 \x01(\fR\x1apublicKeyFingerprintSha256\"\x7f\n" +
	"\x16PublicKeyAllowResponse\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\fR\tpublicKey\x12F\n" +
	"\vpermissions\x18\x02 \x01(\v2$.pomerium.extensions.ssh.PermissionsR\vpermissions\"B\n" +
	" KeyboardInteractiveMethodRequest\x12\x1e\n" +
	"\n" +
	"submethods\x18\x01 \x03(\tR\n" +
	"submethods\"\xac\x02\n" +
	" KeyboardInteractiveAllowResponse\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12]\n" +
	"\x06claims\x18\x03 \x03(\v2E.pomerium.extensions.ssh.KeyboardInteractiveAllowResponse.ClaimsEntryR\x06claims\x12\x1a\n" +
	"\baudience\x18\x04 \x03(\tR\baudience\x1aU\n" +
	"\vClaimsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.google.protobuf.ListValueR\x05value:\x028\x01\"\x89\x02\n" +
	"\x1eKeyboardInteractiveInfoPrompts\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vinstruction\x18\x02 \x01(\tR\vinstruction\x12!\n" +
	"\flanguage_tag\x18\x03 \x01(\tR\vlanguageTag\x12X\n" +
	"\aprompts\x18\x04 \x03(\v2>.pomerium.extensions.ssh.KeyboardInteractiveInfoPrompts.PromptR\aprompts\x1a4\n" +
	"\x06Prompt\x12\x16\n" +
	"\x06prompt\x18\x01 \x01(\tR\x06prompt\x12\x12\n" +
	"\x04echo\x18\x02 \x01(\bR\x04echo\"F\n" +
	"&KeyboardInteractiveInfoPromptResponses\x12\x1c\n" +
	"\tresponses\x18\x01 \x03(\tR\tresponses\"\xd0\x05\n" +
	"\vPermissions\x124\n" +
	"\x16permit_port_forwarding\x18\x01 \x01(\bR\x14permitPortForwarding\x126\n" +
	"\x17permit_agent_forwarding\x18\x02 \x01(\bR\x15permitAgentForwarding\x122\n" +
	"\x15permit_x11_forwarding\x18\x03 \x01(\bR\x13permitX11Forwarding\x12\x1d\n" +
	"\n" +
	"permit_pty\x18\x04 \x01(\bR\tpermitPty\x12$\n" +
	"\x0epermit_user_rc\x18\x05 \x01(\bR\fpermitUserRc\x12D\n" +
	"\x10valid_start_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x0evalidStartTime\x12@\n" +
	"\x0evalid_end_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\fvalidEndTime\x12\x1f\n" +
	"\vpermit_open\x18\b \x03(\tR\n" +
	"permitOpen\x12#\n" +
	"\rpermit_listen\x18\t \x03(\tR\fpermitListen\x12#\n" +
	"\rforce_command\x18\n" +
	" \x01(\tR\fforceCommand\x12O\n" +
	"\tforce_env\x18\v \x03(\v22.pomerium.extensions.ssh.Permissions.ForceEnvEntryR\bforceEnv\x122\n" +
	"\x15require_user_presence\x18\f \x01(\bR\x13requireUserPresence\x12%\n" +
	"\x0erequire_verify\x18\r \x01(\bR\rrequireVerify\x1a;\n" +
	"\rForceEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"L\n" +
	"\x0eFilterMetadata\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\x04R\bstreamId\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x02 \x01(\rR\tchannelId2\xdc\x01\n" +
	"\x10StreamManagement\x12b\n" +
	"\fManageStream\x12&.pomerium.extensions.ssh.ClientMessage\x1a&.pomerium.extensions.ssh.ServerMessage(\x010\x01\x12d\n" +
	"\fServeChannel\x12'.pomerium.extensions.ssh.ChannelMessage\x1a'.pomerium.extensions.ssh.ChannelMessage(\x010\x01BEZCgithub.com/pomerium/envoy-custom/api/extensions/filters/network/sshb\x06proto3"

var (
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescOnce sync.Once
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescData []byte
)

func file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescGZIP() []byte {
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescOnce.Do(func() {
		file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDesc), len(file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDesc)))
	})
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDescData
}

var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_goTypes = []any{
	(MirrorSessionTarget_Mode)(0),                   // 0: pomerium.extensions.ssh.MirrorSessionTarget.Mode
	(*CodecConfig)(nil),                             // 1: pomerium.extensions.ssh.CodecConfig
	(*StreamTrackerConfig)(nil),                     // 2: pomerium.extensions.ssh.StreamTrackerConfig
	(*ReverseTunnelCluster)(nil),                    // 3: pomerium.extensions.ssh.ReverseTunnelCluster
	(*ChannelMessage)(nil),                          // 4: pomerium.extensions.ssh.ChannelMessage
	(*ChannelControl)(nil),                          // 5: pomerium.extensions.ssh.ChannelControl
	(*ClientMessage)(nil),                           // 6: pomerium.extensions.ssh.ClientMessage
	(*StreamEvent)(nil),                             // 7: pomerium.extensions.ssh.StreamEvent
	(*DownstreamConnectEvent)(nil),                  // 8: pomerium.extensions.ssh.DownstreamConnectEvent
	(*DownstreamDisconnectedEvent)(nil),             // 9: pomerium.extensions.ssh.DownstreamDisconnectedEvent
	(*UpstreamConnectEvent)(nil),                    // 10: pomerium.extensions.ssh.UpstreamConnectEvent
	(*ChannelEvent)(nil),                            // 11: pomerium.extensions.ssh.ChannelEvent
	(*GlobalRequest)(nil),                           // 12: pomerium.extensions.ssh.GlobalRequest
	(*AuthenticationRequest)(nil),                   // 13: pomerium.extensions.ssh.AuthenticationRequest
	(*InfoResponse)(nil),                            // 14: pomerium.extensions.ssh.InfoResponse
	(*ServerMessage)(nil),                           // 15: pomerium.extensions.ssh.ServerMessage
	(*AuthenticationResponse)(nil),                  // 16: pomerium.extensions.ssh.AuthenticationResponse
	(*AllowResponse)(nil),                           // 17: pomerium.extensions.ssh.AllowResponse
	(*UpstreamTarget)(nil),                          // 18: pomerium.extensions.ssh.UpstreamTarget
	(*InternalTarget)(nil),                          // 19: pomerium.extensions.ssh.InternalTarget
	(*MirrorSessionTarget)(nil),                     // 20: pomerium.extensions.ssh.MirrorSessionTarget
	(*AllowedMethod)(nil),                           // 21: pomerium.extensions.ssh.AllowedMethod
	(*DenyResponse)(nil),                            // 22: pomerium.extensions.ssh.DenyResponse
	(*InfoRequest)(nil),                             // 23: pomerium.extensions.ssh.InfoRequest
	(*SSHDownstreamChannelInfo)(nil),                // 24: pomerium.extensions.ssh.SSHDownstreamChannelInfo
	(*SSHDownstreamPTYInfo)(nil),                    // 25: pomerium.extensions.ssh.SSHDownstreamPTYInfo
	(*SSHChannelControlAction)(nil),                 // 26: pomerium.extensions.ssh.SSHChannelControlAction
	(*PublicKeyMethodRequest)(nil),                  // 27: pomerium.extensions.ssh.PublicKeyMethodRequest
	(*PublicKeyAllowResponse)(nil),                  // 28: pomerium.extensions.ssh.PublicKeyAllowResponse
	(*KeyboardInteractiveMethodRequest)(nil),        // 29: pomerium.extensions.ssh.KeyboardInteractiveMethodRequest
	(*KeyboardInteractiveAllowResponse)(nil),        // 30: pomerium.extensions.ssh.KeyboardInteractiveAllowResponse
	(*KeyboardInteractiveInfoPrompts)(nil),          // 31: pomerium.extensions.ssh.KeyboardInteractiveInfoPrompts
	(*KeyboardInteractiveInfoPromptResponses)(nil),  // 32: pomerium.extensions.ssh.KeyboardInteractiveInfoPromptResponses
	(*Permissions)(nil),                             // 33: pomerium.extensions.ssh.Permissions
	(*FilterMetadata)(nil),                          // 34: pomerium.extensions.ssh.FilterMetadata
	(*ChannelEvent_InternalChannelOpenedEvent)(nil), // 35: pomerium.extensions.ssh.ChannelEvent.InternalChannelOpenedEvent
	(*ChannelEvent_InternalChannelClosedEvent)(nil), // 36: pomerium.extensions.ssh.ChannelEvent.InternalChannelClosedEvent
	(*GlobalRequest_TcpipForwardRequest)(nil),       // 37: pomerium.extensions.ssh.GlobalRequest.TcpipForwardRequest
	(*SSHChannelControlAction_HandOffUpstream)(nil), // 38: pomerium.extensions.ssh.SSHChannelControlAction.HandOffUpstream
	nil, // 39: pomerium.extensions.ssh.KeyboardInteractiveAllowResponse.ClaimsEntry
	(*KeyboardInteractiveInfoPrompts_Prompt)(nil), // 40: pomerium.extensions.ssh.KeyboardInteractiveInfoPrompts.Prompt
	nil,                             // 41: pomerium.extensions.ssh.Permissions.ForceEnvEntry
	(*v3.DataSource)(nil),           // 42: envoy.config.core.v3.DataSource
	(*wrapperspb.UInt64Value)(nil),  // 43: google.protobuf.UInt64Value
	(*v3.GrpcService)(nil),          // 44: envoy.config.core.v3.GrpcService
	(*v3.TypedExtensionConfig)(nil), // 45: envoy.config.core.v3.TypedExtensionConfig
	(*v3.ConfigSource)(nil),         // 46: envoy.config.core.v3.ConfigSource
	(*v3.Metadata)(nil),             // 47: envoy.config.core.v3.Metadata
	(*wrapperspb.BytesValue)(nil),   // 48: google.protobuf.BytesValue
	(*anypb.Any)(nil),               // 49: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),   // 50: google.protobuf.Timestamp
	(*structpb.ListValue)(nil),      // 51: google.protobuf.ListValue
}
var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_depIdxs = []int32{
	42, // 0: pomerium.extensions.ssh.CodecConfig.host_keys:type_name -> envoy.config.core.v3.DataSource
	42, // 1: pomerium.extensions.ssh.CodecConfig.user_ca_key:type_name -> envoy.config.core.v3.DataSource
	43, // 2: pomerium.extensions.ssh.CodecConfig.rekey_threshold:type_name -> google.protobuf.UInt64Value
	44, // 3: pomerium.extensions.ssh.CodecConfig.grpc_service:type_name -> envoy.config.core.v3.GrpcService
	2,  // 4: pomerium.extensions.ssh.CodecConfig.stream_tracker:type_name -> pomerium.extensions.ssh.StreamTrackerConfig
	45, // 5: pomerium.extensions.ssh.StreamTrackerConfig.filters:type_name -> envoy.config.core.v3.TypedExtensionConfig
	46, // 6: pomerium.extensions.ssh.ReverseTunnelCluster.eds_config:type_name -> envoy.config.core.v3.ConfigSource
	47, // 7: pomerium.extensions.ssh.ChannelMessage.metadata:type_name -> envoy.config.core.v3.Metadata
	48, // 8: pomerium.extensions.ssh.ChannelMessage.raw_bytes:type_name -> google.protobuf.BytesValue
	5,  // 9: pomerium.extensions.ssh.ChannelMessage.channel_control:type_name -> pomerium.extensions.ssh.ChannelControl
	49, // 10: pomerium.extensions.ssh.ChannelControl.control_action:type_name -> google.protobuf.Any
	7,  // 11: pomerium.extensions.ssh.ClientMessage.event:type_name -> pomerium.extensions.ssh.StreamEvent
	13, // 12: pomerium.extensions.ssh.ClientMessage.auth_request:type_name -> pomerium.extensions.ssh.AuthenticationRequest
	14, // 13: pomerium.extensions.ssh.ClientMessage.info_response:type_name -> pomerium.extensions.ssh.InfoResponse
	8,  // 14: pomerium.extensions.ssh.StreamEvent.downstream_connected:type_name -> pomerium.extensions.ssh.DownstreamConnectEvent
	9,  // 15: pomerium.extensions.ssh.StreamEvent.downstream_disconnected:type_name -> pomerium.extensions.ssh.DownstreamDisconnectedEvent
	10, // 16: pomerium.extensions.ssh.StreamEvent.upstream_connected:type_name -> pomerium.extensions.ssh.UpstreamConnectEvent
	11, // 17: pomerium.extensions.ssh.StreamEvent.channel_event:type_name -> pomerium.extensions.ssh.ChannelEvent
	12, // 18: pomerium.extensions.ssh.StreamEvent.global_request:type_name -> pomerium.extensions.ssh.GlobalRequest
	35, // 19: pomerium.extensions.ssh.ChannelEvent.internal_channel_opened:type_name -> pomerium.extensions.ssh.ChannelEvent.InternalChannelOpenedEvent
	36, // 20: pomerium.extensions.ssh.ChannelEvent.internal_channel_closed:type_name -> pomerium.extensions.ssh.ChannelEvent.InternalChannelClosedEvent
	37, // 21: pomerium.extensions.ssh.GlobalRequest.tcpip_forward_request:type_name -> pomerium.extensions.ssh.GlobalRequest.TcpipForwardRequest
	49, // 22: pomerium.extensions.ssh.AuthenticationRequest.method_request:type_name -> google.protobuf.Any
	49, // 23: pomerium.extensions.ssh.InfoResponse.response:type_name -> google.protobuf.Any
	16, // 24: pomerium.extensions.ssh.ServerMessage.auth_response:type_name -> pomerium.extensions.ssh.AuthenticationResponse
	17, // 25: pomerium.extensions.ssh.AuthenticationResponse.allow:type_name -> pomerium.extensions.ssh.AllowResponse
	22, // 26: pomerium.extensions.ssh.AuthenticationResponse.deny:type_name -> pomerium.extensions.ssh.DenyResponse
	23, // 27: pomerium.extensions.ssh.AuthenticationResponse.info_request:type_name -> pomerium.extensions.ssh.InfoRequest
	18, // 28: pomerium.extensions.ssh.AllowResponse.upstream:type_name -> pomerium.extensions.ssh.UpstreamTarget
	19, // 29: pomerium.extensions.ssh.AllowResponse.internal:type_name -> pomerium.extensions.ssh.InternalTarget
	20, // 30: pomerium.extensions.ssh.AllowResponse.mirror_session:type_name -> pomerium.extensions.ssh.MirrorSessionTarget
	21, // 31: pomerium.extensions.ssh.UpstreamTarget.allowed_methods:type_name -> pomerium.extensions.ssh.AllowedMethod
	45, // 32: pomerium.extensions.ssh.UpstreamTarget.extensions:type_name -> envoy.config.core.v3.TypedExtensionConfig
	47, // 33: pomerium.extensions.ssh.InternalTarget.set_metadata:type_name -> envoy.config.core.v3.Metadata
	0,  // 34: pomerium.extensions.ssh.MirrorSessionTarget.mode:type_name -> pomerium.extensions.ssh.MirrorSessionTarget.Mode
	49, // 35: pomerium.extensions.ssh.AllowedMethod.method_data:type_name -> google.protobuf.Any
	49, // 36: pomerium.extensions.ssh.InfoRequest.request:type_name -> google.protobuf.Any
	38, // 37: pomerium.extensions.ssh.SSHChannelControlAction.hand_off:type_name -> pomerium.extensions.ssh.SSHChannelControlAction.HandOffUpstream
	33, // 38: pomerium.extensions.ssh.PublicKeyAllowResponse.permissions:type_name -> pomerium.extensions.ssh.Permissions
	39, // 39: pomerium.extensions.ssh.KeyboardInteractiveAllowResponse.claims:type_name -> pomerium.extensions.ssh.KeyboardInteractiveAllowResponse.ClaimsEntry
	40, // 40: pomerium.extensions.ssh.KeyboardInteractiveInfoPrompts.prompts:type_name -> pomerium.extensions.ssh.KeyboardInteractiveInfoPrompts.Prompt
	50, // 41: pomerium.extensions.ssh.Permissions.valid_start_time:type_name -> google.protobuf.Timestamp
	50, // 42: pomerium.extensions.ssh.Permissions.valid_end_time:type_name -> google.protobuf.Timestamp
	41, // 43: pomerium.extensions.ssh.Permissions.force_env:type_name -> pomerium.extensions.ssh.Permissions.ForceEnvEntry
	24, // 44: pomerium.extensions.ssh.SSHChannelControlAction.HandOffUpstream.downstream_channel_info:type_name -> pomerium.extensions.ssh.SSHDownstreamChannelInfo
	25, // 45: pomerium.extensions.ssh.SSHChannelControlAction.HandOffUpstream.downstream_pty_info:type_name -> pomerium.extensions.ssh.SSHDownstreamPTYInfo
	17, // 46: pomerium.extensions.ssh.SSHChannelControlAction.HandOffUpstream.upstream_auth:type_name -> pomerium.extensions.ssh.AllowResponse
	51, // 47: pomerium.extensions.ssh.KeyboardInteractiveAllowResponse.ClaimsEntry.value:type_name -> google.protobuf.ListValue
	6,  // 48: pomerium.extensions.ssh.StreamManagement.ManageStream:input_type -> pomerium.extensions.ssh.ClientMessage
	4,  // 49: pomerium.extensions.ssh.StreamManagement.ServeChannel:input_type -> pomerium.extensions.ssh.ChannelMessage
	15, // 50: pomerium.extensions.ssh.StreamManagement.ManageStream:output_type -> pomerium.extensions.ssh.ServerMessage
	4,  // 51: pomerium.extensions.ssh.StreamManagement.ServeChannel:output_type -> pomerium.extensions.ssh.ChannelMessage
	50, // [50:52] is the sub-list for method output_type
	48, // [48:50] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() {
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_init()
}
func file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_init() {
	if File_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto != nil {
		return
	}
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[3].OneofWrappers = []any{
		(*ChannelMessage_Metadata)(nil),
		(*ChannelMessage_RawBytes)(nil),
		(*ChannelMessage_ChannelControl)(nil),
	}
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[5].OneofWrappers = []any{
		(*ClientMessage_Event)(nil),
		(*ClientMessage_AuthRequest)(nil),
		(*ClientMessage_InfoResponse)(nil),
	}
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[6].OneofWrappers = []any{
		(*StreamEvent_DownstreamConnected)(nil),
		(*StreamEvent_DownstreamDisconnected)(nil),
		(*StreamEvent_UpstreamConnected)(nil),
		(*StreamEvent_ChannelEvent)(nil),
		(*StreamEvent_GlobalRequest)(nil),
	}
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[10].OneofWrappers = []any{
		(*ChannelEvent_InternalChannelOpened)(nil),
		(*ChannelEvent_InternalChannelClosed)(nil),
	}
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[11].OneofWrappers = []any{
		(*GlobalRequest_TcpipForwardRequest_)(nil),
	}
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[14].OneofWrappers = []any{
		(*ServerMessage_AuthResponse)(nil),
	}
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[15].OneofWrappers = []any{
		(*AuthenticationResponse_Allow)(nil),
		(*AuthenticationResponse_Deny)(nil),
		(*AuthenticationResponse_InfoRequest)(nil),
	}
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[16].OneofWrappers = []any{
		(*AllowResponse_Upstream)(nil),
		(*AllowResponse_Internal)(nil),
		(*AllowResponse_MirrorSession)(nil),
	}
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes[25].OneofWrappers = []any{
		(*SSHChannelControlAction_HandOff)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDesc), len(file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_goTypes,
		DependencyIndexes: file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_depIdxs,
		EnumInfos:         file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_enumTypes,
		MessageInfos:      file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_msgTypes,
	}.Build()
	File_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto = out.File
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_goTypes = nil
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_ssh_proto_depIdxs = nil
}
