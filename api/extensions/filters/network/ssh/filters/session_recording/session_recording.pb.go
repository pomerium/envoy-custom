// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: github.com/pomerium/envoy-custom/api/extensions/filters/network/ssh/filters/session_recording/session_recording.proto

package session_recording

import (
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	ssh "github.com/pomerium/envoy-custom/api/extensions/filters/network/ssh"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Format int32

const (
	Format_UnknownFormat   Format = 0
	Format_RawFormat       Format = 1
	Format_AsciicastFormat Format = 2
)

// Enum value maps for Format.
var (
	Format_name = map[int32]string{
		0: "UnknownFormat",
		1: "RawFormat",
		2: "AsciicastFormat",
	}
	Format_value = map[string]int32{
		"UnknownFormat":   0,
		"RawFormat":       1,
		"AsciicastFormat": 2,
	}
)

func (x Format) Enum() *Format {
	p := new(Format)
	*p = x
	return p
}

func (x Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Format) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_enumTypes[0].Descriptor()
}

func (Format) Type() protoreflect.EnumType {
	return &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_enumTypes[0]
}

func (x Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Format.Descriptor instead.
func (Format) EnumDescriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescGZIP(), []int{0}
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageDir        string                   `protobuf:"bytes,1,opt,name=storage_dir,json=storageDir,proto3" json:"storage_dir,omitempty"`
	GrpcService       *v3.GrpcService          `protobuf:"bytes,3,opt,name=grpc_service,json=grpcService,proto3" json:"grpc_service,omitempty"`
	CompressorLibrary *v3.TypedExtensionConfig `protobuf:"bytes,4,opt,name=compressor_library,json=compressorLibrary,proto3" json:"compressor_library,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetStorageDir() string {
	if x != nil {
		return x.StorageDir
	}
	return ""
}

func (x *Config) GetGrpcService() *v3.GrpcService {
	if x != nil {
		return x.GrpcService
	}
	return nil
}

func (x *Config) GetCompressorLibrary() *v3.TypedExtensionConfig {
	if x != nil {
		return x.CompressorLibrary
	}
	return nil
}

// This extension is added to [pomerium.extensions.ssh.UpstreamTarget] to enable session recording
// and configure related options.
type UpstreamTargetExtensionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// File basename for the recording, relative to the configured storage_dir.
	RecordingName string `protobuf:"bytes,1,opt,name=recording_name,json=recordingName,proto3" json:"recording_name,omitempty"`
	// Recording format
	Format Format `protobuf:"varint,2,opt,name=format,proto3,enum=pomerium.extensions.ssh.filters.session_recording.Format" json:"format,omitempty"`
}

func (x *UpstreamTargetExtensionConfig) Reset() {
	*x = UpstreamTargetExtensionConfig{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamTargetExtensionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamTargetExtensionConfig) ProtoMessage() {}

func (x *UpstreamTargetExtensionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamTargetExtensionConfig.ProtoReflect.Descriptor instead.
func (*UpstreamTargetExtensionConfig) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescGZIP(), []int{1}
}

func (x *UpstreamTargetExtensionConfig) GetRecordingName() string {
	if x != nil {
		return x.RecordingName
	}
	return ""
}

func (x *UpstreamTargetExtensionConfig) GetFormat() Format {
	if x != nil {
		return x.Format
	}
	return Format_UnknownFormat
}

type RecordingMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordingName    string                    `protobuf:"bytes,1,opt,name=recording_name,json=recordingName,proto3" json:"recording_name,omitempty"`
	Format           Format                    `protobuf:"varint,2,opt,name=format,proto3,enum=pomerium.extensions.ssh.filters.session_recording.Format" json:"format,omitempty"`
	UncompressedSize uint64                    `protobuf:"varint,3,opt,name=uncompressed_size,json=uncompressedSize,proto3" json:"uncompressed_size,omitempty"`
	StartTime        *timestamppb.Timestamp    `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          *timestamppb.Timestamp    `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	LoginName        string                    `protobuf:"bytes,7,opt,name=login_name,json=loginName,proto3" json:"login_name,omitempty"`
	Upstream         *ssh.UpstreamTarget       `protobuf:"bytes,8,opt,name=upstream,proto3" json:"upstream,omitempty"`
	SessionId        string                    `protobuf:"bytes,9,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	StreamId         uint64                    `protobuf:"varint,10,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	RouteName        string                    `protobuf:"bytes,11,opt,name=route_name,json=routeName,proto3" json:"route_name,omitempty"`
	PtyInfo          *ssh.SSHDownstreamPTYInfo `protobuf:"bytes,12,opt,name=pty_info,json=ptyInfo,proto3" json:"pty_info,omitempty"`
}

func (x *RecordingMetadata) Reset() {
	*x = RecordingMetadata{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingMetadata) ProtoMessage() {}

func (x *RecordingMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingMetadata.ProtoReflect.Descriptor instead.
func (*RecordingMetadata) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescGZIP(), []int{2}
}

func (x *RecordingMetadata) GetRecordingName() string {
	if x != nil {
		return x.RecordingName
	}
	return ""
}

func (x *RecordingMetadata) GetFormat() Format {
	if x != nil {
		return x.Format
	}
	return Format_UnknownFormat
}

func (x *RecordingMetadata) GetUncompressedSize() uint64 {
	if x != nil {
		return x.UncompressedSize
	}
	return 0
}

func (x *RecordingMetadata) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *RecordingMetadata) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *RecordingMetadata) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *RecordingMetadata) GetUpstream() *ssh.UpstreamTarget {
	if x != nil {
		return x.Upstream
	}
	return nil
}

func (x *RecordingMetadata) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RecordingMetadata) GetStreamId() uint64 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *RecordingMetadata) GetRouteName() string {
	if x != nil {
		return x.RouteName
	}
	return ""
}

func (x *RecordingMetadata) GetPtyInfo() *ssh.SSHDownstreamPTYInfo {
	if x != nil {
		return x.PtyInfo
	}
	return nil
}

type RecordingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*RecordingData_Metadata
	//	*RecordingData_Chunk
	//	*RecordingData_Checksum
	Data isRecordingData_Data `protobuf_oneof:"data"`
}

func (x *RecordingData) Reset() {
	*x = RecordingData{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingData) ProtoMessage() {}

func (x *RecordingData) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingData.ProtoReflect.Descriptor instead.
func (*RecordingData) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescGZIP(), []int{3}
}

func (m *RecordingData) GetData() isRecordingData_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *RecordingData) GetMetadata() *RecordingMetadata {
	if x, ok := x.GetData().(*RecordingData_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (x *RecordingData) GetChunk() []byte {
	if x, ok := x.GetData().(*RecordingData_Chunk); ok {
		return x.Chunk
	}
	return nil
}

func (x *RecordingData) GetChecksum() []byte {
	if x, ok := x.GetData().(*RecordingData_Checksum); ok {
		return x.Checksum
	}
	return nil
}

type isRecordingData_Data interface {
	isRecordingData_Data()
}

type RecordingData_Metadata struct {
	Metadata *RecordingMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type RecordingData_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

type RecordingData_Checksum struct {
	Checksum []byte `protobuf:"bytes,7,opt,name=checksum,proto3,oneof"`
}

func (*RecordingData_Metadata) isRecordingData_Data() {}

func (*RecordingData_Chunk) isRecordingData_Data() {}

func (*RecordingData_Checksum) isRecordingData_Data() {}

var File_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto protoreflect.FileDescriptor

var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDesc = []byte{
	0x0a, 0x75, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x6d,
	0x65, 0x72, 0x69, 0x75, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2d, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2f, 0x73, 0x73, 0x68, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x31, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x73, 0x73, 0x68,
	0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x4d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2f,
	0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x73, 0x68, 0x2f,
	0x73, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x33, 0x2f,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x27, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x76, 0x33, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x69, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44,
	0x69, 0x72, 0x12, 0x44, 0x0a, 0x0c, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x33, 0x2e,
	0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0b, 0x67, 0x72, 0x70,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x22, 0x99, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x70,
	0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x73, 0x73, 0x68, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22,
	0xb5, 0x04, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x70,
	0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x73, 0x73, 0x68, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x2b, 0x0a, 0x11, 0x75, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x75, 0x6e, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a,
	0x08, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x73, 0x73, 0x68, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a,
	0x08, 0x70, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x73, 0x73, 0x68, 0x2e, 0x53, 0x53, 0x48, 0x44, 0x6f, 0x77,
	0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x54, 0x59, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x70, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb1, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x62, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x70, 0x6f,
	0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x73, 0x73, 0x68, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x3f, 0x0a, 0x06, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x61, 0x77, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x73, 0x63, 0x69, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x10, 0x02, 0x32, 0x84, 0x01, 0x0a,
	0x10, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x70, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x40, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69,
	0x75, 0x6d, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x73, 0x73,
	0x68, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x28, 0x01, 0x42, 0x5f, 0x5a, 0x5d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x2d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x73, 0x68, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescOnce sync.Once
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescData = file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDesc
)

func file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescGZIP() []byte {
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescOnce.Do(func() {
		file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescData)
	})
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescData
}

var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_goTypes = []any{
	(Format)(0),                           // 0: pomerium.extensions.ssh.filters.session_recording.Format
	(*Config)(nil),                        // 1: pomerium.extensions.ssh.filters.session_recording.Config
	(*UpstreamTargetExtensionConfig)(nil), // 2: pomerium.extensions.ssh.filters.session_recording.UpstreamTargetExtensionConfig
	(*RecordingMetadata)(nil),             // 3: pomerium.extensions.ssh.filters.session_recording.RecordingMetadata
	(*RecordingData)(nil),                 // 4: pomerium.extensions.ssh.filters.session_recording.RecordingData
	(*v3.GrpcService)(nil),                // 5: envoy.config.core.v3.GrpcService
	(*v3.TypedExtensionConfig)(nil),       // 6: envoy.config.core.v3.TypedExtensionConfig
	(*timestamppb.Timestamp)(nil),         // 7: google.protobuf.Timestamp
	(*ssh.UpstreamTarget)(nil),            // 8: pomerium.extensions.ssh.UpstreamTarget
	(*ssh.SSHDownstreamPTYInfo)(nil),      // 9: pomerium.extensions.ssh.SSHDownstreamPTYInfo
	(*emptypb.Empty)(nil),                 // 10: google.protobuf.Empty
}
var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_depIdxs = []int32{
	5,  // 0: pomerium.extensions.ssh.filters.session_recording.Config.grpc_service:type_name -> envoy.config.core.v3.GrpcService
	6,  // 1: pomerium.extensions.ssh.filters.session_recording.Config.compressor_library:type_name -> envoy.config.core.v3.TypedExtensionConfig
	0,  // 2: pomerium.extensions.ssh.filters.session_recording.UpstreamTargetExtensionConfig.format:type_name -> pomerium.extensions.ssh.filters.session_recording.Format
	0,  // 3: pomerium.extensions.ssh.filters.session_recording.RecordingMetadata.format:type_name -> pomerium.extensions.ssh.filters.session_recording.Format
	7,  // 4: pomerium.extensions.ssh.filters.session_recording.RecordingMetadata.start_time:type_name -> google.protobuf.Timestamp
	7,  // 5: pomerium.extensions.ssh.filters.session_recording.RecordingMetadata.end_time:type_name -> google.protobuf.Timestamp
	8,  // 6: pomerium.extensions.ssh.filters.session_recording.RecordingMetadata.upstream:type_name -> pomerium.extensions.ssh.UpstreamTarget
	9,  // 7: pomerium.extensions.ssh.filters.session_recording.RecordingMetadata.pty_info:type_name -> pomerium.extensions.ssh.SSHDownstreamPTYInfo
	3,  // 8: pomerium.extensions.ssh.filters.session_recording.RecordingData.metadata:type_name -> pomerium.extensions.ssh.filters.session_recording.RecordingMetadata
	4,  // 9: pomerium.extensions.ssh.filters.session_recording.RecordingService.RecordingFinalized:input_type -> pomerium.extensions.ssh.filters.session_recording.RecordingData
	10, // 10: pomerium.extensions.ssh.filters.session_recording.RecordingService.RecordingFinalized:output_type -> google.protobuf.Empty
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() {
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_init()
}
func file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_init() {
	if File_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto != nil {
		return
	}
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[3].OneofWrappers = []any{
		(*RecordingData_Metadata)(nil),
		(*RecordingData_Chunk)(nil),
		(*RecordingData_Checksum)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_goTypes,
		DependencyIndexes: file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_depIdxs,
		EnumInfos:         file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_enumTypes,
		MessageInfos:      file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes,
	}.Build()
	File_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto = out.File
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDesc = nil
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_goTypes = nil
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_depIdxs = nil
}
