// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: github.com/pomerium/envoy-custom/api/extensions/filters/network/ssh/filters/session_recording/session_recording.proto

package session_recording

import (
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	ssh "github.com/pomerium/envoy-custom/api/extensions/filters/network/ssh"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Format int32

const (
	Format_UNKNOWN_FORMAT       Format = 0
	Format_RAW_FORMAT           Format = 1
	Format_ASCIICAST_FORMAT     Format = 2
	Format_RAW_ENCRYPTED_FORMAT Format = 3
)

// Enum value maps for Format.
var (
	Format_name = map[int32]string{
		0: "UNKNOWN_FORMAT",
		1: "RAW_FORMAT",
		2: "ASCIICAST_FORMAT",
		3: "RAW_ENCRYPTED_FORMAT",
	}
	Format_value = map[string]int32{
		"UNKNOWN_FORMAT":       0,
		"RAW_FORMAT":           1,
		"ASCIICAST_FORMAT":     2,
		"RAW_ENCRYPTED_FORMAT": 3,
	}
)

func (x Format) Enum() *Format {
	p := new(Format)
	*p = x
	return p
}

func (x Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Format) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_enumTypes[0].Descriptor()
}

func (Format) Type() protoreflect.EnumType {
	return &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_enumTypes[0]
}

func (x Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Format.Descriptor instead.
func (Format) EnumDescriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescGZIP(), []int{0}
}

type Config struct {
	state             protoimpl.MessageState   `protogen:"open.v1"`
	StorageDir        string                   `protobuf:"bytes,1,opt,name=storage_dir,json=storageDir,proto3" json:"storage_dir,omitempty"`
	GrpcService       *v3.GrpcService          `protobuf:"bytes,3,opt,name=grpc_service,json=grpcService,proto3" json:"grpc_service,omitempty"`
	CompressorLibrary *v3.TypedExtensionConfig `protobuf:"bytes,4,opt,name=compressor_library,json=compressorLibrary,proto3" json:"compressor_library,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetStorageDir() string {
	if x != nil {
		return x.StorageDir
	}
	return ""
}

func (x *Config) GetGrpcService() *v3.GrpcService {
	if x != nil {
		return x.GrpcService
	}
	return nil
}

func (x *Config) GetCompressorLibrary() *v3.TypedExtensionConfig {
	if x != nil {
		return x.CompressorLibrary
	}
	return nil
}

// This extension is added to [pomerium.extensions.ssh.UpstreamTarget] to enable session recording
// and configure related options.
type UpstreamTargetExtensionConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// File basename for the recording, relative to the configured storage_dir.
	RecordingName string `protobuf:"bytes,1,opt,name=recording_name,json=recordingName,proto3" json:"recording_name,omitempty"`
	// Recording format
	Format        Format `protobuf:"varint,2,opt,name=format,proto3,enum=pomerium.extensions.ssh.filters.session_recording.Format" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpstreamTargetExtensionConfig) Reset() {
	*x = UpstreamTargetExtensionConfig{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamTargetExtensionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamTargetExtensionConfig) ProtoMessage() {}

func (x *UpstreamTargetExtensionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamTargetExtensionConfig.ProtoReflect.Descriptor instead.
func (*UpstreamTargetExtensionConfig) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescGZIP(), []int{1}
}

func (x *UpstreamTargetExtensionConfig) GetRecordingName() string {
	if x != nil {
		return x.RecordingName
	}
	return ""
}

func (x *UpstreamTargetExtensionConfig) GetFormat() Format {
	if x != nil {
		return x.Format
	}
	return Format_UNKNOWN_FORMAT
}

type RecordingMetadata struct {
	state            protoimpl.MessageState    `protogen:"open.v1"`
	RecordingName    string                    `protobuf:"bytes,1,opt,name=recording_name,json=recordingName,proto3" json:"recording_name,omitempty"`
	Format           Format                    `protobuf:"varint,2,opt,name=format,proto3,enum=pomerium.extensions.ssh.filters.session_recording.Format" json:"format,omitempty"`
	UncompressedSize uint64                    `protobuf:"varint,3,opt,name=uncompressed_size,json=uncompressedSize,proto3" json:"uncompressed_size,omitempty"`
	StartTime        *timestamppb.Timestamp    `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          *timestamppb.Timestamp    `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	LoginName        string                    `protobuf:"bytes,7,opt,name=login_name,json=loginName,proto3" json:"login_name,omitempty"`
	Upstream         *ssh.UpstreamTarget       `protobuf:"bytes,8,opt,name=upstream,proto3" json:"upstream,omitempty"`
	SessionId        string                    `protobuf:"bytes,9,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	StreamId         uint64                    `protobuf:"varint,10,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	RouteName        string                    `protobuf:"bytes,11,opt,name=route_name,json=routeName,proto3" json:"route_name,omitempty"`
	PtyInfo          *ssh.SSHDownstreamPTYInfo `protobuf:"bytes,12,opt,name=pty_info,json=ptyInfo,proto3" json:"pty_info,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RecordingMetadata) Reset() {
	*x = RecordingMetadata{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingMetadata) ProtoMessage() {}

func (x *RecordingMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingMetadata.ProtoReflect.Descriptor instead.
func (*RecordingMetadata) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescGZIP(), []int{2}
}

func (x *RecordingMetadata) GetRecordingName() string {
	if x != nil {
		return x.RecordingName
	}
	return ""
}

func (x *RecordingMetadata) GetFormat() Format {
	if x != nil {
		return x.Format
	}
	return Format_UNKNOWN_FORMAT
}

func (x *RecordingMetadata) GetUncompressedSize() uint64 {
	if x != nil {
		return x.UncompressedSize
	}
	return 0
}

func (x *RecordingMetadata) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *RecordingMetadata) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *RecordingMetadata) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *RecordingMetadata) GetUpstream() *ssh.UpstreamTarget {
	if x != nil {
		return x.Upstream
	}
	return nil
}

func (x *RecordingMetadata) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RecordingMetadata) GetStreamId() uint64 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *RecordingMetadata) GetRouteName() string {
	if x != nil {
		return x.RouteName
	}
	return ""
}

func (x *RecordingMetadata) GetPtyInfo() *ssh.SSHDownstreamPTYInfo {
	if x != nil {
		return x.PtyInfo
	}
	return nil
}

type RecordingData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*RecordingData_Metadata
	//	*RecordingData_Chunk
	//	*RecordingData_Checksum
	Data          isRecordingData_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordingData) Reset() {
	*x = RecordingData{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingData) ProtoMessage() {}

func (x *RecordingData) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingData.ProtoReflect.Descriptor instead.
func (*RecordingData) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescGZIP(), []int{3}
}

func (x *RecordingData) GetData() isRecordingData_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RecordingData) GetMetadata() *RecordingMetadata {
	if x != nil {
		if x, ok := x.Data.(*RecordingData_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *RecordingData) GetChunk() []byte {
	if x != nil {
		if x, ok := x.Data.(*RecordingData_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

func (x *RecordingData) GetChecksum() []byte {
	if x != nil {
		if x, ok := x.Data.(*RecordingData_Checksum); ok {
			return x.Checksum
		}
	}
	return nil
}

type isRecordingData_Data interface {
	isRecordingData_Data()
}

type RecordingData_Metadata struct {
	Metadata *RecordingMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type RecordingData_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

type RecordingData_Checksum struct {
	Checksum []byte `protobuf:"bytes,3,opt,name=checksum,proto3,oneof"`
}

func (*RecordingData_Metadata) isRecordingData_Data() {}

func (*RecordingData_Chunk) isRecordingData_Data() {}

func (*RecordingData_Checksum) isRecordingData_Data() {}

var File_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto protoreflect.FileDescriptor

const file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDesc = "" +
	"\n" +
	"ugithub.com/pomerium/envoy-custom/api/extensions/filters/network/ssh/filters/session_recording/session_recording.proto\x121pomerium.extensions.ssh.filters.session_recording\x1aMgithub.com/pomerium/envoy-custom/api/extensions/filters/network/ssh/ssh.proto\x1a$envoy/config/core/v3/extension.proto\x1a'envoy/config/core/v3/grpc_service.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xca\x01\n" +
	"\x06Config\x12\x1f\n" +
	"\vstorage_dir\x18\x01 \x01(\tR\n" +
	"storageDir\x12D\n" +
	"\fgrpc_service\x18\x03 \x01(\v2!.envoy.config.core.v3.GrpcServiceR\vgrpcService\x12Y\n" +
	"\x12compressor_library\x18\x04 \x01(\v2*.envoy.config.core.v3.TypedExtensionConfigR\x11compressorLibrary\"\x99\x01\n" +
	"\x1dUpstreamTargetExtensionConfig\x12%\n" +
	"\x0erecording_name\x18\x01 \x01(\tR\rrecordingName\x12Q\n" +
	"\x06format\x18\x02 \x01(\x0e29.pomerium.extensions.ssh.filters.session_recording.FormatR\x06format\"\xb5\x04\n" +
	"\x11RecordingMetadata\x12%\n" +
	"\x0erecording_name\x18\x01 \x01(\tR\rrecordingName\x12Q\n" +
	"\x06format\x18\x02 \x01(\x0e29.pomerium.extensions.ssh.filters.session_recording.FormatR\x06format\x12+\n" +
	"\x11uncompressed_size\x18\x03 \x01(\x04R\x10uncompressedSize\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1d\n" +
	"\n" +
	"login_name\x18\a \x01(\tR\tloginName\x12C\n" +
	"\bupstream\x18\b \x01(\v2'.pomerium.extensions.ssh.UpstreamTargetR\bupstream\x12\x1d\n" +
	"\n" +
	"session_id\x18\t \x01(\tR\tsessionId\x12\x1b\n" +
	"\tstream_id\x18\n" +
	" \x01(\x04R\bstreamId\x12\x1d\n" +
	"\n" +
	"route_name\x18\v \x01(\tR\trouteName\x12H\n" +
	"\bpty_info\x18\f \x01(\v2-.pomerium.extensions.ssh.SSHDownstreamPTYInfoR\aptyInfo\"\xb1\x01\n" +
	"\rRecordingData\x12b\n" +
	"\bmetadata\x18\x01 \x01(\v2D.pomerium.extensions.ssh.filters.session_recording.RecordingMetadataH\x00R\bmetadata\x12\x16\n" +
	"\x05chunk\x18\x02 \x01(\fH\x00R\x05chunk\x12\x1c\n" +
	"\bchecksum\x18\x03 \x01(\fH\x00R\bchecksumB\x06\n" +
	"\x04data*\\\n" +
	"\x06Format\x12\x12\n" +
	"\x0eUNKNOWN_FORMAT\x10\x00\x12\x0e\n" +
	"\n" +
	"RAW_FORMAT\x10\x01\x12\x14\n" +
	"\x10ASCIICAST_FORMAT\x10\x02\x12\x18\n" +
	"\x14RAW_ENCRYPTED_FORMAT\x10\x032\x84\x01\n" +
	"\x10RecordingService\x12p\n" +
	"\x12RecordingFinalized\x12@.pomerium.extensions.ssh.filters.session_recording.RecordingData\x1a\x16.google.protobuf.Empty(\x01B_Z]github.com/pomerium/envoy-custom/api/extensions/filters/network/ssh/filters/session_recordingb\x06proto3"

var (
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescOnce sync.Once
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescData []byte
)

func file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescGZIP() []byte {
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescOnce.Do(func() {
		file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDesc), len(file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDesc)))
	})
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDescData
}

var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_goTypes = []any{
	(Format)(0),                           // 0: pomerium.extensions.ssh.filters.session_recording.Format
	(*Config)(nil),                        // 1: pomerium.extensions.ssh.filters.session_recording.Config
	(*UpstreamTargetExtensionConfig)(nil), // 2: pomerium.extensions.ssh.filters.session_recording.UpstreamTargetExtensionConfig
	(*RecordingMetadata)(nil),             // 3: pomerium.extensions.ssh.filters.session_recording.RecordingMetadata
	(*RecordingData)(nil),                 // 4: pomerium.extensions.ssh.filters.session_recording.RecordingData
	(*v3.GrpcService)(nil),                // 5: envoy.config.core.v3.GrpcService
	(*v3.TypedExtensionConfig)(nil),       // 6: envoy.config.core.v3.TypedExtensionConfig
	(*timestamppb.Timestamp)(nil),         // 7: google.protobuf.Timestamp
	(*ssh.UpstreamTarget)(nil),            // 8: pomerium.extensions.ssh.UpstreamTarget
	(*ssh.SSHDownstreamPTYInfo)(nil),      // 9: pomerium.extensions.ssh.SSHDownstreamPTYInfo
	(*emptypb.Empty)(nil),                 // 10: google.protobuf.Empty
}
var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_depIdxs = []int32{
	5,  // 0: pomerium.extensions.ssh.filters.session_recording.Config.grpc_service:type_name -> envoy.config.core.v3.GrpcService
	6,  // 1: pomerium.extensions.ssh.filters.session_recording.Config.compressor_library:type_name -> envoy.config.core.v3.TypedExtensionConfig
	0,  // 2: pomerium.extensions.ssh.filters.session_recording.UpstreamTargetExtensionConfig.format:type_name -> pomerium.extensions.ssh.filters.session_recording.Format
	0,  // 3: pomerium.extensions.ssh.filters.session_recording.RecordingMetadata.format:type_name -> pomerium.extensions.ssh.filters.session_recording.Format
	7,  // 4: pomerium.extensions.ssh.filters.session_recording.RecordingMetadata.start_time:type_name -> google.protobuf.Timestamp
	7,  // 5: pomerium.extensions.ssh.filters.session_recording.RecordingMetadata.end_time:type_name -> google.protobuf.Timestamp
	8,  // 6: pomerium.extensions.ssh.filters.session_recording.RecordingMetadata.upstream:type_name -> pomerium.extensions.ssh.UpstreamTarget
	9,  // 7: pomerium.extensions.ssh.filters.session_recording.RecordingMetadata.pty_info:type_name -> pomerium.extensions.ssh.SSHDownstreamPTYInfo
	3,  // 8: pomerium.extensions.ssh.filters.session_recording.RecordingData.metadata:type_name -> pomerium.extensions.ssh.filters.session_recording.RecordingMetadata
	4,  // 9: pomerium.extensions.ssh.filters.session_recording.RecordingService.RecordingFinalized:input_type -> pomerium.extensions.ssh.filters.session_recording.RecordingData
	10, // 10: pomerium.extensions.ssh.filters.session_recording.RecordingService.RecordingFinalized:output_type -> google.protobuf.Empty
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() {
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_init()
}
func file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_init() {
	if File_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto != nil {
		return
	}
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes[3].OneofWrappers = []any{
		(*RecordingData_Metadata)(nil),
		(*RecordingData_Chunk)(nil),
		(*RecordingData_Checksum)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDesc), len(file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_goTypes,
		DependencyIndexes: file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_depIdxs,
		EnumInfos:         file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_enumTypes,
		MessageInfos:      file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_msgTypes,
	}.Build()
	File_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto = out.File
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_goTypes = nil
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_session_recording_proto_depIdxs = nil
}
