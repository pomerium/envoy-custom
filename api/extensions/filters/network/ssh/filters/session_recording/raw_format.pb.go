// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: github.com/pomerium/envoy-custom/api/extensions/filters/network/ssh/filters/session_recording/raw_format.proto

package session_recording

import (
	ssh "github.com/pomerium/envoy-custom/api/extensions/filters/network/ssh"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PacketDirection int32

const (
	PacketDirection_NONE                   PacketDirection = 0
	PacketDirection_UPSTREAM_TO_DOWNSTREAM PacketDirection = 1
	PacketDirection_DOWNSTREAM_TO_UPSTREAM PacketDirection = 2
)

// Enum value maps for PacketDirection.
var (
	PacketDirection_name = map[int32]string{
		0: "NONE",
		1: "UPSTREAM_TO_DOWNSTREAM",
		2: "DOWNSTREAM_TO_UPSTREAM",
	}
	PacketDirection_value = map[string]int32{
		"NONE":                   0,
		"UPSTREAM_TO_DOWNSTREAM": 1,
		"DOWNSTREAM_TO_UPSTREAM": 2,
	}
)

func (x PacketDirection) Enum() *PacketDirection {
	p := new(PacketDirection)
	*p = x
	return p
}

func (x PacketDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PacketDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_enumTypes[0].Descriptor()
}

func (PacketDirection) Type() protoreflect.EnumType {
	return &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_enumTypes[0]
}

func (x PacketDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PacketDirection.Descriptor instead.
func (PacketDirection) EnumDescriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_rawDescGZIP(), []int{0}
}

type Header struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	StartTime     int64                     `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // unix milliseconds
	PtyInfo       *ssh.SSHDownstreamPTYInfo `protobuf:"bytes,2,opt,name=pty_info,json=ptyInfo,proto3" json:"pty_info,omitempty"`
	Encrypted     bool                      `protobuf:"varint,3,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	Metadata      map[string]string         `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Header) Reset() {
	*x = Header{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_rawDescGZIP(), []int{0}
}

func (x *Header) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Header) GetPtyInfo() *ssh.SSHDownstreamPTYInfo {
	if x != nil {
		return x.PtyInfo
	}
	return nil
}

func (x *Header) GetEncrypted() bool {
	if x != nil {
		return x.Encrypted
	}
	return false
}

func (x *Header) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Packet struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	TimeDeltaMs int64                  `protobuf:"varint,1,opt,name=time_delta_ms,json=timeDeltaMs,proto3" json:"time_delta_ms,omitempty"`
	Direction   PacketDirection        `protobuf:"varint,2,opt,name=direction,proto3,enum=pomerium.extensions.ssh.filters.session_recording.raw_format.PacketDirection" json:"direction,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*Packet_ChannelData
	//	*Packet_SshMessage
	Payload       isPacket_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Packet) Reset() {
	*x = Packet{}
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_rawDescGZIP(), []int{1}
}

func (x *Packet) GetTimeDeltaMs() int64 {
	if x != nil {
		return x.TimeDeltaMs
	}
	return 0
}

func (x *Packet) GetDirection() PacketDirection {
	if x != nil {
		return x.Direction
	}
	return PacketDirection_NONE
}

func (x *Packet) GetPayload() isPacket_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Packet) GetChannelData() []byte {
	if x != nil {
		if x, ok := x.Payload.(*Packet_ChannelData); ok {
			return x.ChannelData
		}
	}
	return nil
}

func (x *Packet) GetSshMessage() []byte {
	if x != nil {
		if x, ok := x.Payload.(*Packet_SshMessage); ok {
			return x.SshMessage
		}
	}
	return nil
}

type isPacket_Payload interface {
	isPacket_Payload()
}

type Packet_ChannelData struct {
	// Raw contents of ChannelDataMsg. This is an optimization to avoid encoding the message
	// type, size, etc., since the majority of packets will be ChannelDataMsg.
	ChannelData []byte `protobuf:"bytes,3,opt,name=channel_data,json=channelData,proto3,oneof"`
}

type Packet_SshMessage struct {
	// Any SSH message
	SshMessage []byte `protobuf:"bytes,4,opt,name=ssh_message,json=sshMessage,proto3,oneof"`
}

func (*Packet_ChannelData) isPacket_Payload() {}

func (*Packet_SshMessage) isPacket_Payload() {}

var File_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto protoreflect.FileDescriptor

const file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_rawDesc = "" +
	"\n" +
	"ngithub.com/pomerium/envoy-custom/api/extensions/filters/network/ssh/filters/session_recording/raw_format.proto\x12<pomerium.extensions.ssh.filters.session_recording.raw_format\x1aMgithub.com/pomerium/envoy-custom/api/extensions/filters/network/ssh/ssh.proto\"\xbc\x02\n" +
	"\x06Header\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\x03R\tstartTime\x12H\n" +
	"\bpty_info\x18\x02 \x01(\v2-.pomerium.extensions.ssh.SSHDownstreamPTYInfoR\aptyInfo\x12\x1c\n" +
	"\tencrypted\x18\x03 \x01(\bR\tencrypted\x12n\n" +
	"\bmetadata\x18\x04 \x03(\v2R.pomerium.extensions.ssh.filters.session_recording.raw_format.Header.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xec\x01\n" +
	"\x06Packet\x12\"\n" +
	"\rtime_delta_ms\x18\x01 \x01(\x03R\vtimeDeltaMs\x12k\n" +
	"\tdirection\x18\x02 \x01(\x0e2M.pomerium.extensions.ssh.filters.session_recording.raw_format.PacketDirectionR\tdirection\x12#\n" +
	"\fchannel_data\x18\x03 \x01(\fH\x00R\vchannelData\x12!\n" +
	"\vssh_message\x18\x04 \x01(\fH\x00R\n" +
	"sshMessageB\t\n" +
	"\apayload*S\n" +
	"\x0fPacketDirection\x12\b\n" +
	"\x04NONE\x10\x00\x12\x1a\n" +
	"\x16UPSTREAM_TO_DOWNSTREAM\x10\x01\x12\x1a\n" +
	"\x16DOWNSTREAM_TO_UPSTREAM\x10\x02BaH\x03Z]github.com/pomerium/envoy-custom/api/extensions/filters/network/ssh/filters/session_recordingb\x06proto3"

var (
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_rawDescOnce sync.Once
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_rawDescData []byte
)

func file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_rawDescGZIP() []byte {
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_rawDescOnce.Do(func() {
		file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_rawDesc), len(file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_rawDesc)))
	})
	return file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_rawDescData
}

var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_goTypes = []any{
	(PacketDirection)(0),             // 0: pomerium.extensions.ssh.filters.session_recording.raw_format.PacketDirection
	(*Header)(nil),                   // 1: pomerium.extensions.ssh.filters.session_recording.raw_format.Header
	(*Packet)(nil),                   // 2: pomerium.extensions.ssh.filters.session_recording.raw_format.Packet
	nil,                              // 3: pomerium.extensions.ssh.filters.session_recording.raw_format.Header.MetadataEntry
	(*ssh.SSHDownstreamPTYInfo)(nil), // 4: pomerium.extensions.ssh.SSHDownstreamPTYInfo
}
var file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_depIdxs = []int32{
	4, // 0: pomerium.extensions.ssh.filters.session_recording.raw_format.Header.pty_info:type_name -> pomerium.extensions.ssh.SSHDownstreamPTYInfo
	3, // 1: pomerium.extensions.ssh.filters.session_recording.raw_format.Header.metadata:type_name -> pomerium.extensions.ssh.filters.session_recording.raw_format.Header.MetadataEntry
	0, // 2: pomerium.extensions.ssh.filters.session_recording.raw_format.Packet.direction:type_name -> pomerium.extensions.ssh.filters.session_recording.raw_format.PacketDirection
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() {
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_init()
}
func file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_init() {
	if File_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto != nil {
		return
	}
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_msgTypes[1].OneofWrappers = []any{
		(*Packet_ChannelData)(nil),
		(*Packet_SshMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_rawDesc), len(file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_goTypes,
		DependencyIndexes: file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_depIdxs,
		EnumInfos:         file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_enumTypes,
		MessageInfos:      file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_msgTypes,
	}.Build()
	File_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto = out.File
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_goTypes = nil
	file_github_com_pomerium_envoy_custom_api_extensions_filters_network_ssh_filters_session_recording_raw_format_proto_depIdxs = nil
}
