syntax = "proto3";

package pomerium.extensions.ssh.filters.session_recording;

import "api/extensions/filters/network/ssh/ssh.proto";
import "envoy/config/core/v3/extension.proto";
import "envoy/config/core/v3/grpc_service.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/pomerium/envoy-custom/api/extensions/filters/network/ssh/filters/session_recording";

service RecordingService {
  rpc RecordingFinalized(stream RecordingData) returns (google.protobuf.Empty);
}

message Config {
  string storage_dir = 1;

  envoy.config.core.v3.GrpcService          grpc_service       = 3;
  envoy.config.core.v3.TypedExtensionConfig compressor_library = 4;
}

enum Format {
  UnknownFormat      = 0;
  RawFormat          = 1;
  AsciicastFormat    = 2;
  RawEncryptedFormat = 3;
}

// This extension is added to [pomerium.extensions.ssh.UpstreamTarget] to enable session recording
// and configure related options.
message UpstreamTargetExtensionConfig {
  // File basename for the recording, relative to the configured storage_dir.
  string recording_name = 1;
  // Recording format
  Format format = 2;
}

message RecordingMetadata {
  string                    recording_name    = 1;
  Format                    format            = 2;
  uint64                    uncompressed_size = 3;
  google.protobuf.Timestamp start_time        = 4;
  google.protobuf.Timestamp end_time          = 5;
  string                    login_name        = 7;
  UpstreamTarget            upstream          = 8;
  string                    session_id        = 9;
  uint64                    stream_id         = 10;
  string                    route_name        = 11;
  SSHDownstreamPTYInfo      pty_info          = 12;
}

message RecordingData {
  oneof data {
    RecordingMetadata metadata = 1;
    bytes             chunk    = 2;
    bytes             checksum = 7;
  }
}
